{"version":3,"sources":["lght/util/util.js","lght/lght.js","View/view.js","Model/model.js","Controller/controller.js","App.js","serviceWorker.js","index.js"],"names":["random","high","low","Math","round","mergeDefaultPropertyObject","p","d","o","prop","_","cloneDeep","findDistance2Point","x1","y1","x2","y2","sqrt","pow","findAngle2Point","dx","dy","tan","atan","radToDeg","rad","PI","degToRad","deg","rotatePoint","cx","cy","x","y","calculateRotatePoint","r","angleIndex","indexOf","coeff","cos","sin","findIntersection","s1","s2","x11","y11","x12","y12","x21","y21","x22","y22","minX1","min","maxX1","max","minX2","maxX2","slope1","slope2","coeff1","findClosestPoint","s","angle","abs","findAngle3Point","d1","d2","changeByDotNotation","propertyString","object","value","propertyArray","split","objectLink","forEach","e","i","length","Array","isArray","parseInt","getByDotNotation","lght","inputReference","movementIndex","coeffIndex","defaultAppConfig","initFunctions","animateFunctions","lastFrame","undefined","constantRender","background","defaultObjectProps","shapes","animations","animationCount","static","rotation","positionIndicator","display","opacity","mouseUpEvent","mouseDownEvent","mouseMoveEvent","zIndex","defaultShapeOptions","kind","color","lineWidth","borderColor","borderWidth","border","borderOnly","shadow","defaultRectOptions","w","h","clip","clipImageLink","clipCanvas","defaultArcOptions","arcDegree","defaultTextOptions","textAlign","font","text","defaultImgOptions","spriteLink","drawWidth","drawHeight","loadedFunction","defaultPolyOptions","points","specialPolygon","numberOfSide","radius","defaultLineOptions","apps","gameloop","list","frameTime","loop","time","requestAnimationFrame","app","elem","options","this","canvas","objects","push","turnFunctions","prototype","obj","update","translateMouseCoor","pageX","pageY","clientX","document","body","scrollLeft","documentElement","clientY","scrollTop","offsetLeft","offsetTop","objectCount","property","parent","id","name","objectName","collide","pointInShape","xs","ys","findMax","minX","maxX","minY","maxY","spriteLinkReference","spriteImageReference","funcLists","sprite","link","func","index","image","Image","onload","src","shape","splice","vertex","findVertex","offsetMinX","borderWidthIfBorderIsOn","offsetMaxX","offsetMinY","offsetMaxY","shadowOffsetMinX","blur","shadowOffsetMaxX","shadowOffsetMinY","shadowOffsetMaxY","offsetX","offsetY","sides","findSides","compareSide","intersect","result","maxY1","minY1","maxY2","minY2","side1","side2","hasBorder","width","height","rect","rx","ry","nx","absoluteX","ny","absoluteY","arc","minAngle","maxAngle","minRadAngle","maxRadAngle","referenceX","referenceY","vertex1","vertex2","pureCircle","ray1","ray2","side","closest","roundedRectangle","borderRadius","clipImage","updateVisual","complete","poly","polyPoints","map","radiusCoefficient","line","notIncluded","position","point","rotatedPoints","distance","angleQuadrant","firstDistance","pointOneInFirstQuadrant","pointSecondInSecondQuadrant","pointThreeInThirdQuadrant","pointFourInFourthQuadrant","c","context","save","measureText","restore","textSize","img","imageLoaded","attachQuickMovement","velocity","cooldown","cd","addEventListener","key","setTimeout","mouseInputInit","attachEvent","event","pointInObject","LargeLoop","a","pressedEvent","makeDraggable","funcDone","onDrag","draggable","hoverEvent","funcin","funcout","mouseIn","touch","animate","timeDifference","animateFunctionReference","animation","init","timeUp","newValue","addAnimation","timeout","cancelAnimation","alreadyAnimated","find","findIndex","clearTimeout","arguments","render","clearCanvas","fillBackground","renderShape","visualInit","backgroundColor","getContext","renderPositions","sort","b","drawPreloader","draw","clearRect","fillStyle","fillRect","beginPath","closePath","fill","preloader","maxes","createPreloader","clearPreloader","ox","oy","drawShape","createElement","ceil","translate","drawImg","drawShapeKind","stroke","globalAlpha","strokeStyle","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","drawRect","drawArc","drawText","drawPoly","drawLine","drawRoundedRectangle","clipImageLoaded","rotate","drawImage","strokeRect","moveTo","lineTo","quadraticCurveTo","br","er","fillText","addShape","addObject","removeObject","View","configureMonopolyResourceInterface","monopoly","addLayer","resourceReference","total","resolveFunction","initiateMonpolyResourceChoosing","Promise","args","addLayerViaName","hexProperty","inititiateArray","getPositionMatrix","createDiceDeck","createDevDeck","createActionObject","createPlayerDeck","drawAnnouncement","setUpResourceIcon","setUpTurnTimer","configureStartGameMessage","playerCode","turnObject","colorCode","startGameObject","activated","fadeIn","fadeOut","initiateStartGameMessage","previousColor","model","imageReference","halfCard","stealInterface","letterHeadText","numberLeftText","numberLeftElement","numberChosen","numberNeeded","numberLeft","mode","actionFunction","actionFuctionFactory","getNumberLeft","icons","numbers","chosen","addModifier","subtractModifier","modifierFunctionFactory","updateNumbers","leftModifier","rightModifier","addYellowHoverEvent","acceptSymbol","halfh","resolve","initiateSteal","cardNeeded","initiatePlenty","stealTextProp","positions","initiateStealFromOther","usernames","console","log","robberPosition","grid","resourceBoard","playerUsernames","numberBoard","createBoard","BigLoop","positionMatrix","robberX","robberY","robber","addRobber","location","robberElement","l","locations","loc","house","drawPossibleSettlement","kill","turnTimer","turnTimerInterval","turnTimerElement","turnTimerText","startTurnTimer","cancelTurnTimer","timeLeft","setInterval","clearInterval","res","posY","posX","resource","findDistanceFromShapeTo","leaderBoardObject","toX","toY","makeResourceIcon","wheatResourceIcon","rockResourceIcon","brickResourceIcon","sheepResourceIcon","woodResourceIcon","animateDevCard","onTrade","queue","proposer","bankAmountAllowed","cancelTrade","proposeTrade","receiveMode","tradingElement","amountGivenReference","amountDemandReference","proposeTo","createImageLine","ys2","addModifierLine","icon","modifier","addNumberLine","number","propose","numberOfResourceGiven","rate","tradingPriveleges","randomTrade","numberOfResourceDemand","getResourceLeft","numberOfResourceLeft","proposeTradeLetterHead","proposerElement","resourceLeft","usernamesElement","addCheck","username","check","checkElement","bank","changeMode","cancel","cancelSymbolBottom","cancelSymbolTop","rejectFunctionFactory","tradeReceiver","proposeTradeFunction","reduce","t","deiniateReceiveMode","deinitiateSendMode","deiniateBankMode","m","updateTradeReceiver","filter","playerid","proposing","resourceDemanded","resourceGiven","receiveTrade","reject","initiateTrade","announcementQueue","announcmentPerpetual","onAnnouncementPerpetual","onAnnoucementChanged","announcement","annoucementText","fadeOutThenFadeIn","updateAnnouncement","findPositionOfIntersection","structureElement","roads","drawPossibleRoad","topHead","bottomHead","angle1","angle2","roadElement","leaderBoardCanvas","leaderBoardApp","createShape","textColor","us1","is1","sn1","us2","is2","sn2","us3","is3","sn3","us4","is4","sn4","usernameElements","infoElements","specialNoteElements","updateLeaderBoard","resourcePlayers","devCardPlayers","vpPlayers","longestRoadPlayer","largestArmyPlayer","u","turnIndicator","tradeIndicatorObject","hRect","turnOriginal","updateTurn","turn","actionObject","addActionObject","textElement","actionReference","actionDisplayReference","textObjects","actionFunctions","currentActions","updateActionObjects","wheatAmount","rockAmount","sheepAmount","brickAmount","woodAmount","changeResource","num","wheatCard","rockCard","sheepCard","brickCard","woodCard","playerUI","playerDeck","addCard","arr","createDevLayer","layer","devDeck","popUpDevDeckRectangle","delegate","developmentCardReference","cardElements","card","currentCardPosition","oldModel","myDevCards","updateToModel","cards","backgroundPoly","clipImageLinks","imageResourceReference","repeatedlyAddByPositionMatrix","array","row","elements","resourceElement","checkPositionFactory","addNumberTokenToPositionWithNumber","tradeImageReference","tradeResourceReference","boardPosReference","py","px","trade","port","portElement","portMap","hex","hexWidth","fiveRow","fourRowDown","sideLength","threeRowDown","fourRowUp","threeRowUp","leftOrRight","cardHeight","cardWidth","cardProps","numberCircleProps","numberProp","card1","circle","diceProps","borde","dicePlate","diceElement","redDice","yellowDice","diceNumReference","rollDiceAnimation","pip1","pip2","loopleft","loopManage","showDiceNumber","dice1","dice2","renderNumber","dice","pipColor","pips","pip","dots","numberOfDot","startingPosition","cityResolveFunction","currentColorCode","settlements","structures","oldSettlement","structure","cities","changeDistance","oddsOneOut","differentCoefficient","translatedPosition","translateToViewCoordinate","flat","y3","x3","oddY","oddX","hexMap","tileRow","leftMostHex","rightMostHex","vx","vy","findThePositionThatIsRelativeToThisObjectFromAbsolutePosition","oddsHex","pos","buttonMap","numberMap","compareDoubleArray","comparePositions","p1","p2","position1","position2","found","isThereThisPositionInThisArray","Model","allGridLocation","chunk","totalDevCard","totalResource","inBound","firstY","secondY","thirdY","tile","positionTypeCoefficient","oddsY","oddsX","leftOddsBorderTile","rightOddsBorderTile","yOfTileRowBorderTile","differenceInLength","tileRowBorderTile","topHead1","bottomHead1","topHead2","bottomHead2","road","compareRoad","adjacents","findAdjacentPositionsTo","settlement","head","doesThisRoadAlreadyExist","selfRoad","woodTrade","sheepTrade","brickTrade","rockTrade","wheatTrade","selfSettlement","possibles","includes","toLowerCase","city","change","playerindex","selfCity","possibleSettlements","possibleRoads","canBuildCity","canBuildSettlement","canBuildRoad","alreadyChecked","notAlreadyChecked","validPlaceToBuildAStructure","heads","headsFiltered","Controller","token","socket","io","connect","query","sendMessage","message","data","emit","usualFunctionReference","messageReference","waitingFunctionReference","errorFunctionReference","translateToApplicableResources","resources","addMessage","mess","addOnce","awaitResponse","rejected","messageReceived","f","view","on","global","turnSpecificInfo","startRobberDrag","phase","announce","code","changeAnnoucementPerpetual","quickAnnounce","addToAnnoucementQueue","turnOffAnnouncement","configureColorCode","error","gameData","roomCode","loadData","receiveData","createLeaderboardObject","createTradingObject","configureStealInterface","createDevDeckPlayer","devCardDelegate","currentX","currentY","newPlayer","Knight","Monopoly","Road","Point","Plenty","selectSettlementLocationFrom","possibleSettlementsInitial","firstSettlementLocation","buildSettlement","selfBuildSettlement","addResourceInitial","selectRoadLocation","possibleRoadsInitial","firstRoadLocation","buildRoad","selfBuildRoad","roadPosition","settlementPosition","secondSettlementLocation","secondRoadLocation","changeToPhaseOne","changeToPhaseTwo","possibleActions","changeToWaitingPhase","actionFunctionFactory","changePlayerResourceCount","phase2ActionFunctionFactory","handleRobber","changeRobberPostion","robabble","findWhoToStealFrom","robbed","wheat","sheep","rock","brick","wood","minusResource","amount","totalResources","activateCitySelection","buildCity","selfBuildCity","phase2DevCardFunctionFactory","devCardFunctionFactory","previousPhase","Error","useDevelopmentCard","playedDevelopmentCard","addResource","changeResourceMonopoly","firstPosition","secondPosition","alreadyBuying","selfCanBuyDevelopmentCard","boughtDevelopmentCard","buyDevCard","animateDevCardToPlayerDeck","armyChange","roadChange","passiveFunctionFactory","attachPassiveFunctionFactory","moveRobber","winner","myTradingCodes","myTradingPartner","getRidOfCode","amountGiven","amountDemand","players","codes","translateToArray","handleTrade","user","resourceDemand","given","demand","changeToPartner","otherPlayer","giver","getter","give","take","base","axios","create","baseURL","post","url","method","App","canvasRef","useRef","useState","logIn","setLogIn","validationSchema","string","processLogin","current","submitData","cogoToast","createRoom","useEffect","className","ref","style","path","initialValues","onSubmit","handleChange","handleBlur","handleSubmit","type","onChange","onBlur","to","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5da91c87.chunk.js","sourcesContent":["import _ from 'lodash'\n\nconst random = (high,low) => {return Math.round(Math.random()*(high-low+1) + low);}\n\t\nconst mergeDefaultPropertyObject = (p,d,o)=>{\n\tfor(var prop in d){\n\t\tif(typeof p == 'object'){\n\t\t\tif(typeof p[prop] === 'function') o[prop] = p[prop]\n\t\t\telse if(typeof p[prop] != 'undefined') o[prop] = _.cloneDeep(p[prop]);\n\t\t\telse o[prop] = _.cloneDeep(d[prop]);\n\t\t}\n\t\telse{\n\t\t\to[prop] = _.cloneDeep(d[prop]);\n\t\t}\n\t}\n}\n\n//<---------------------GEOMETRIC FUNCTION-------------------->\n\nconst findQuadrant = (angle) => {\n\tif(angle < 90 && angle > 0) return 1;\n\tif(angle > 90 && angle < 180) return 2;\n\tif(angle > 180 && angle < 270) return 3;\n\tif(angle > 270 && angle < 360) return 4;\n}\n\nconst findDistance2Point = (x1,y1,x2,y2)=>Math.sqrt(Math.pow((x1-x2),2) + Math.pow((y1-y2),2))\n\n\nconst findAngle2Point = function(x1,y1,x2,y2){\n\t//CHECK SPECIAL CASES\n\tif(x1===x2&&y1===y2) return 0;\n\tif(x1===x2){\n\t\tif(y1 < y2) return 270;\n\t\tif(y1 > y2) return 90;\n\t} \n\tif(y1===y2){\n\t\tif(x1<x2) return 0;\n\t\tif(x2<x1) return 180;\n\t}\n\n\t//FIND QUADRANT\n\tvar dx = x2-x1; var dy = y2-y1;\n\tvar tan = Math.atan((-dy)/dx);\n\n\tif(x1<x2&&y1>y2) return radToDeg(tan);//QUADRANT 1\n\tif(x1>x2&&y1>y2) return\t180 + radToDeg(tan); //QUADRANT 2\n\tif(x1>x2&&y1<y2) return 180 + radToDeg(tan);//QUADRANT 3\n\tif(x1<x2&&y1<y2) return 360 + radToDeg(tan);//QUADRANT 4\n}\n\nconst radToDeg = (rad) => (rad*180)/Math.PI;\n\nconst degToRad = (deg) => (deg*Math.PI)/180;\n\nconst rotatePoint = (cx,cy,x,y,deg) => (deg===0||deg===360)? [x,y]: calculateRotatePoint(cx,cy,findAngle2Point(cx,cy,x,y)+deg,findDistance2Point(cx,cy,x,y));\n\nconst calculateRotatePoint = function(cx,cy,r,d){\n\tconst rad = degToRad(r);\n\n\t//IF IT'S IN SPECIAL CASE\n\tconst angleIndex = [0,90,180,270,360];\n\tconst coeffIndex = [[1,0],[0,1],[-1,0],[0,-1],[1,0]];\n\tif(angleIndex.indexOf(r) !== -1){\n\t\tconst coeff = coeffIndex[angleIndex.indexOf(r)];\n\t\treturn [cx+coeff[0]*d,cy-coeff[1]*d];\n\t}\n\treturn [cx + Math.cos(rad)*d, cy - Math.sin(rad)*d];\n}\n\n\n//<----------------------SEGMENT INTERSECTION, USED FOR OBJECT COLLISION------------------------------>\nlet findIntersection = function(s1,s2){\n\t//FIND CONSTRAINS FOR USE BEFORE INTERSECTION FUNCTION\n\tlet [x11,y11,x12,y12] = s1\n\tlet [x21,y21,x22,y22] = s2\n\tif(Math.round(x11) === Math.round(x12) || Math.round(x21) === Math.round(x22)){\n\t\t[x11,y11] = rotatePoint(0,0,x11,y11,30);\n\t\t[x12,y12] = rotatePoint(0,0,x12,y12,30);\n\t\t[x21,y21] = rotatePoint(0,0,x21,y21,30);\n\t\t[x22,y22] = rotatePoint(0,0,x22,y22,30);\n\t}\n\n\n\tconst minX1 = Math.min(x11,x12); const maxX1 = Math.max(x11,x12);\n\tconst minX2 = Math.min(x21,x22); const maxX2 = Math.max(x21,x22);\n\n\tconst slope1 =(y11-y12)/(x11-x12); \n\tconst slope2 =(y21-y22)/(x21-x22);\n\tconst coeff1 = -(x11*slope1) + y11;\n\tconst coeff2 = -(x21*slope2) + y21;\n\n\tif(slope1===slope2) return false;\n\tconst x = (coeff2 - coeff1)/(slope1 - slope2);\n\tconst y = slope1*x + coeff1;\n\tif(((x>minX1)&&(x<maxX1))&&((x>minX2)&&(x<maxX2))) return [x,y];\n\treturn false;\n}\n\n\n//<--------------------------OTHER SEGMENT FUNCTION------------------------------>\nconst findAngle3Point = (cx,cy,x1,y1,x2,y2) => Math.abs(findAngle2Point(cx,cy,x2,y2) - findAngle2Point(cx,cy,x1,y1))\n\n//FIND THE 'HEIGHT' OF A POINT TO A SEGMENT\nconst findClosestPoint = function(x,y,s){\n\tconst [x1,y1,x2,y2] = s\n\n\tlet angle = findAngle3Point(x1,y1,x,y,x2,y2);\n\tconst d = findDistance2Point(x,y,x1,y1);\n\n\tconst d1 = Math.abs(d*Math.cos(degToRad(angle)));\n\tconst d2 = Math.sqrt(Math.pow(d,2) - Math.pow(d1,2));\n\n\tif(d1 > findDistance2Point(x1,y1,x2,y2)) return false;\n\n\tangle = degToRad(findAngle2Point(x1,y1,x2,y2));\n\tconst xh = x1 + Math.cos(angle) * d1; \n\tconst yh = y1 - Math.sin(angle) * d1;\n\treturn [xh,yh,d2];\n}\n\nconst changeByDotNotation = (propertyString,object,value) => {\n\tconst propertyArray = propertyString.split(\".\")\n\tlet objectLink = object\n\tpropertyArray.forEach((e,i)=>{\n\t\tif (i === propertyArray.length - 1){\n\t\t\tif(Array.isArray(objectLink)) objectLink[parseInt(e)] = value\n\t\t\telse objectLink[e] = value\n\t\t}\n\t\telse{\n\t\t\tif(Array.isArray(objectLink)) objectLink = objectLink[parseInt(e)]\n\t\t\telse objectLink = objectLink[e]\n\t\t}\n\t})\n}\n\nconst getByDotNotation = (propertyString,object)=>{\n\tconst propertyArray = propertyString.split(\".\")\n\tlet value = object\n\tpropertyArray.forEach(e=>{\n\t\tif(Array.isArray(value)) value = value[parseInt(e)]\n\t\telse value=object[e]\n\t})\n\treturn value\n}\n\nexport {findClosestPoint,findAngle3Point,findAngle2Point,findIntersection,calculateRotatePoint,random,\nmergeDefaultPropertyObject,findQuadrant,findDistance2Point,radToDeg,degToRad,rotatePoint,changeByDotNotation,getByDotNotation}","//LIGHT LIBRARY IS DEVELOPED BY LONG TRAN\n//COPYRIGHT 2020, ALL RIGHTS RESERVED\n\nimport {getByDotNotation, changeByDotNotation , mergeDefaultPropertyObject, findDistance2Point, findIntersection, rotatePoint, degToRad, findAngle2Point ,findClosestPoint, calculateRotatePoint, radToDeg} from './util/util'\n\nlet lght = {};\n\n//Config\nlght.inputReference = {};\nlght.inputReference.movementIndex = \n    ['w','a','s','d','ArrowUp','ArrowLeft','ArrowDown','ArrowRight'];\n\nlght.inputReference.coeffIndex = \n    [[0,-1],[-1,0],[0,1],[1,0],[0,-1],[-1,0],[0,1],[1,0]];\n\nlght.defaultAppConfig = {\n    initFunctions:[\"visualInit\",'mouseInputInit'],\n    animateFunctions:[\"animate\",\"update\",\"render\"],\n    lastFrame:undefined,\n    constantRender:true,\n    background:\"black\",\n}\n\nlght.defaultObjectProps = {\n    shapes:[],\n    animations:[],\n    animationCount:0,\n    initFunctions:[\"createPreloader\"],\n    static:true,\n    x:0,y:0,\n    rotation:0, \n    positionIndicator:false,\n    display:true,opacity:1,\n    mouseUpEvent:[],mouseDownEvent:[],mouseMoveEvent:[],\n    zIndex:0\n}\n\nlght.defaultShapeOptions = {\n    kind:\"rect\",\n    animations:[],\n    animationCount:0,\n    x:0,y:0,rotation:0,\n    color:\"black\",display:true,\n    lineWidth:1, opacity:1,\n    borderColor:'yellow',\n    borderWidth:10,\n    border:false, borderOnly:false,\n    shadow:null,mouseUpEvent:[],mouseDownEvent:[],mouseMoveEvent:[]\n}\n\nlght.defaultRectOptions = {\n    w:0,h:0,clip:false,\n    clipImageLink:null,clipCanvas:null\n}\n\nlght.defaultArcOptions = {\n    rad:0, arcDegree:360,\n}\n\nlght.defaultTextOptions = {\n    textAlign:'left',\n    font:'10px Ariel',\n    text:'Hello World'\n}\n\nlght.defaultImgOptions = {\n    spriteLink:null,\n    drawWidth:null,drawHeight:null,\n    loadedFunction:undefined\n}\n\nlght.defaultPolyOptions = {\n    points:[],\n    specialPolygon:false,\n    numberOfSide:0,\n    radius:10,\n    clip:false,\n    clipImageLink:null\n}\n\nlght.defaultLineOptions = {\n    points:[]\n}\n\n//Main\nlght.apps = [];\n\nlght.gameloop = {\n    list:[],\n    frameTime:undefined,\n    lastFrame:undefined\n};\n\nlght.gameloop.loop = (time)=>{\n    requestAnimationFrame(lght.gameloop.loop);\n\n    for(var i = 0;i<lght.gameloop.list.length;i++){\n        lght.gameloop.list[i](lght.apps[i]);\n    }\n    \n    if(time!==undefined){\n        lght.lastFrame = lght.frameTime;\n        lght.frameTime = time;\n    }\n}\n\n\n\nlght.gameloop.loop();\n\nlght.app = function(elem,options) {\n\n    this.options = {};\n    mergeDefaultPropertyObject(options,lght.defaultAppConfig,this.options)        \n    this.canvas = elem;\n    this.options.initFunctions.forEach((e)=>this[e]())\n    \n    this.objects = []\n    lght.gameloop.list.push((this.options.constantRender)?this.turnFunctions:()=>{})\n    lght.apps.push(this);\n}\n\nlght.app.prototype.turnFunctions = (obj)=>{\n    obj.options.animateFunctions.forEach((e)=>obj[e]())\n}\n\nlght.app.prototype.update = function(){\n    this.objects.forEach(e => {\n        if(typeof e.update === 'function') e.update(e)\n    });\n}\n\nlght.app.prototype.translateMouseCoor = function(e){\n\tvar x;\n\tvar y;\n\tif (e.pageX || e.pageY) { \n\t\tx = e.pageX;\n\t\ty = e.pageY;\n\t}\n\telse { \n\t\tx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft; \n\t\ty = e.clientY + document.body.scrollTop + document.documentElement.scrollTop; \n\t} \n\tx -= this.canvas.offsetLeft;\n\ty -= this.canvas.offsetTop;\n\treturn [x*2,y*2];\n}\n\n//Object\n\n//TOTAL OBJECT COUNT, USED TO PRODUCE ID\nlght.objectCount = 0;\n\nlght.object = class {\n    constructor(property,parent){\n        lght.objectCount++\n        this.id = lght.objectCount;\n        this.parent = parent;\n        this.parent.objects.push(this)\n        mergeDefaultPropertyObject\n        (property,lght.defaultObjectProps,this);    \n        this.initFunctions.forEach((e)=>this[e]())        \n        this.name = (property.objectName)?property.objectName:`Object ${this.id}`\n    }\n\n    collide(obj){\n        for(let s1 of this.shapes){\n            for (let s2 of obj.shapes){\n                if(s1.collide(s2)) return true\n            }\n        }\n\n        return false\n    }\n\n    pointInObject(x,y){\n        for(let s1 of this.shapes){\n           if(s1.pointInShape(x,y)) return true\n        }\n        return false\n    }\n\n    findMax(){\n        let xs = []\n        let ys = []\n        this.shapes.forEach(s=>{\n            let [minX,maxX,minY,maxY] = s.findMax()\n            xs = [...xs,minX,maxX]\n            ys = [...ys,minY,maxY]\n        })\n        return [Math.min(...xs),Math.max(...xs),Math.min(...ys),Math.max(...ys)]\n    }\n\n    findThePositionThatIsRelativeToThisObjectFromAbsolutePosition(x,y){\n        return [x-this.x,y-this.y]\n    }\n}\n\nlght.spriteLinkReference = []\nlght.spriteImageReference = []\nlght.funcLists = []\n\nlght.sprite = (link,func)=> {\n    const index = lght.spriteLinkReference.indexOf(link)\n    if(index !== -1){\n        const image = lght.spriteImageReference[index]\n        lght.funcLists[index].push(func)\n        return image\n    }\n    else{\n        const image = new Image()\n        const id = lght.spriteImageReference.length\n        image.onload = ()=>{\n            lght.funcLists[id].forEach(e=>e())\n        }\n        lght.funcLists[id] = []\n        lght.funcLists[id].push(func)\n        image.src = link\n        lght.spriteLinkReference.push(link)\n        lght.spriteImageReference.push(image)\n        return image\n    }\n}\n\nlght.shape = class {\n    constructor (property,parent) {\n        this.kind = property.kind\n        this.parent = parent;\n        this.parent.shapes.push(this);\n        mergeDefaultPropertyObject\n        (property,lght.defaultShapeOptions,this);\n    }\n\n    kill (){\n        this.parent.shapes.splice(this.parent.shapes.indexOf(this),1);\n    }\n\n    get absoluteX(){\n        return this.x + this.parent.x\n    }\n\n    get absoluteY(){\n        return this.y + this.parent.y\n    }\n\n    get hasBorder(){\n        return this.border||this.borderOnly\n    }\n\n    get width(){\n        return ((this.hasBorder)?(this.w + this.borderWidth):this.w)\n    }\n\n    get height(){\n        return (this.hasBorder)?this.h + this.borderWidth:this.h\n    }\n\n    get outOfBound(){\n        let [minX,maxX,minY,maxY] = this.findMax();\n        let {width,height} = this.parent.parent.canvas;\n        return (minX > width || maxX < 0 || minY > height || maxY < 0) \n    }\n\n    findVertex(){\n        return []\n    }\n\n    findMax(){\n        const vertex = this.findVertex()\n        const xs = []\n        const ys = []\n\n        vertex.forEach(([x,y])=>{\n            xs.push(x); ys.push(y)\n        })\n\n        let offsetMinX = - this.borderWidthIfBorderIsOn \n        let offsetMaxX = this.borderWidthIfBorderIsOn \n        let offsetMinY = - this.borderWidthIfBorderIsOn \n        let offsetMaxY = this.borderWidthIfBorderIsOn \n\n        if(this.shadow){\n            let shadowOffsetMinX = -this.shadow.blur -2\n            let shadowOffsetMaxX = this.shadow.blur + 2\n            let shadowOffsetMinY = -this.shadow.blur -2\n            let shadowOffsetMaxY = this.shadow.blur +2\n            if(this.shadow.offsetX){\n                shadowOffsetMinX += this.shadow.offsetX\n                shadowOffsetMaxX += this.shadow.offsetX\n            }\n            if(this.shadow.offsetY){\n                shadowOffsetMinY += this.shadow.offsetY\n                shadowOffsetMaxY += this.shadow.offsetY\n            }\n            if(shadowOffsetMinX<0) offsetMinX += shadowOffsetMinX\n            if(shadowOffsetMaxX>0) offsetMaxX += shadowOffsetMaxX\n            if(shadowOffsetMinY<0) offsetMinY += shadowOffsetMinY\n            if(shadowOffsetMaxY>0) offsetMaxY += shadowOffsetMaxY\n        }\n\n        return [\n            Math.min(...xs) + offsetMinX,\n            Math.max(...xs) + offsetMaxX,\n            Math.min(...ys) + offsetMinY,\n            Math.max(...ys) + offsetMaxY\n        ]\n    }\n\n    get borderWidthIfBorderIsOn(){\n        if(this.border||this.borderOnly) return this.borderWidth\n        return 0\n    }\n\n    pointInShape(x,y){\n        let sides = this.findSides()\n        const [minX,maxX,minY,maxY] = this.findMax()\n        let distance = findDistance2Point(x,y,maxX,maxY)\n        let compareSide = [x,y,x+distance,y]\n        let intersect = 0\n        if(x>maxX||x<minX||y>maxY||y<minY) return false\n        sides.forEach(e=>{\n            if(findIntersection(e,compareSide)) intersect++\n        })\n        return !(intersect%2 === 0)\n    }\n\n    findSides(){\n        let vertex = this.findVertex()\n        let result = []\n        for(let i = 0;i<vertex.length;i++){\n            result.push([...vertex[i],...((vertex[i+1])?vertex[i+1]:vertex[0])])\n        }\n        return result\n    }\n\n    collide(shape){\n        if(shape.kind==='arc') return shape.collide(this)\n        let [maxX1,minX1,maxY1,minY1] = this.findMax()\n        let [maxX2,minX2,maxY2,minY2] = shape.findMax()\n        if (((minX1 < minX2) && (maxX1 > maxX2) && (minY1<minY2) && (maxY1>maxY2)) || ((minX2 < minX1) && (maxX2 > maxX1) && (minY2<minY1) && (maxY2>maxY1))) return true\n\n        let side1 = this.findSides()\n        let side2 = shape.findSides()\n\n        for (let s1 of side1){\n            for (let s2 of side2){\n                if(findIntersection(s1,s2)) return true\n            }\n        }\n        return false\n    }\n}\n\nlght.rect = class extends lght.shape{\n    constructor (property,parent){\n        super(property,parent)\n        mergeDefaultPropertyObject(property,lght.defaultRectOptions,this)\n    }\n\n    findVertex(){\n        let reference = [[1,-1],[-1,-1],[-1,1],[1,1]]\n        let result = []\n        reference.forEach(([rx,ry])=>{\n            let nx = this.absoluteX + 0.5*this.width*rx\n            let ny = this.absoluteY + 0.5*this.height*ry\n            result.push(rotatePoint(this.absoluteX,this.absoluteY,nx,ny,this.rotation))\n        })\n        return result\n    }\n}\n\nlght.arc = class extends lght.shape{\n    constructor (property,parent){\n        super(property,parent)\n        mergeDefaultPropertyObject(property,lght.defaultArcOptions,this)\n    }\n\n    get radius(){\n        return (this.hasBorder)?this.rad + this.borderWidth : this.rad\n    }\n\n    get minAngle(){\n        return this.rotation\n    }\n\n    get maxAngle(){\n        return this.rotation + this.arcDegree\n    }\n\n    get minRadAngle(){\n        return degToRad(this.minAngle)\n    }\n\n    get maxRadAngle(){\n        return degToRad(this.maxAngle)\n    }\n\n    get pureCircle(){\n        return this.arcDegree===360\n    }\n\n    pointInShape(x,y){\n        var angle = findAngle2Point(this.absoluteX,this.absoluteY,x,y)\n        if (angle>this.minAngle && angle<this.maxAngle){\n            if(findDistance2Point(this.absoluteX,this.absoluteY,x,y)<=this.radius) return true\n        }\n        return false\n    }\n\n    findMax(){\n        let result = [this.absoluteX-this.radius,this.absoluteX+this.radius,this.absoluteY-this.radius,this.absoluteY+this.radius]\n        let xs = [this.absoluteX,this.absoluteX+Math.cos(this.minRadAngle)*this.radius,this.absoluteX+Math.cos(this.maxRadAngle)*this.radius]\n        let ys = [this.absoluteY,this.absoluteY-Math.sin(this.minRadAngle)*this.radius,this.absoluteY-Math.sin(this.maxRadAngle)*this.radius]\n        if(!this.pointInShape(result[0],this.absoluteY)) result[0] = Math.min(...xs) - this.borderWidthIfBorderIsOn/2;\n        if(!this.pointInShape(result[1],this.absoluteY)) result[1] = Math.max(...xs) + this.borderWidthIfBorderIsOn/2;\n        if(!this.pointInShape(this.absoluteX,result[2])) result[2] = Math.min(...ys) - this.borderWidthIfBorderIsOn/2;\n        if(!this.pointInShape(this.absoluteX,result[3])) result[3] = Math.max(...ys) + this.borderWidthIfBorderIsOn/2;\n        return result\n    }\n\n    findVertex(){\n        let [minX,maxX,minY,maxY] = this.findMax()\n        let referenceX = [this.absoluteX+Math.cos(this.minRadAngle)*this.radius,this.absoluteX+Math.cos(this.maxRadAngle)*this.radius,this.absoluteX+this.radius,this.absoluteX-this.radius,this.absoluteX]\n        let referenceY = [this.absoluteY-Math.sin(this.minRadAngle)*this.radius,this.absoluteY-Math.sin(this.maxRadAngle)*this.radius,this.absoluteY+this.radius,this.absoluteY-this.radius,this.absoluteY]\n\n        return [\n            [minX,referenceY[referenceX.indexOf(minX)]],\n            [maxX,referenceY[referenceX.indexOf(maxX)]],\n            [referenceX[referenceY.indexOf(minY)],minY],\n            [referenceX[referenceY.indexOf(maxY)],maxY],\n        ]\n    }\n\n    fidnSides(){\n        if(this.arcDegree === 360) return false\n        return [\n            [this.absoluteX,this.absoluteY,this.absoluteX+Math.cos(this.minRadAngle)*this.radius,this.absoluteY-Math.sin(this.minRadAngle)*this.radius],\n            [this.absoluteX,this.absoluteY,this.absoluteX+Math.cos(this.maxRadAngle)*this.radius,this.absoluteY-Math.sin(this.maxRadAngle)*this.radius]\n        ]\n    }\n\n    collide(shape){\n        let vertex1 = this.findVertex()\n        let vertex2 = shape.findVertex()\n\n        for(let [x,y] of vertex1){\n            if(shape.pointInShape(x,y)) return true\n        }\n        for(let [x,y] of vertex2){\n            if(this.pointInShape(x,y)) return true\n        }\n        if(shape.kind==='arc'){                \n            //when checking for intersection between 2 arcs, there are 2 cases\n            //Case 1: they are both circles. In this case the distance between the 2 center have to be smaller or equal to\n            //sum of radius for them to intersect\n\n            if(this.pureCircle && shape.pureCircle){\n                return findDistance2Point(this.absoluteX,this.absoluteY,shape.absoluteX,shape.absoluteY) <= this.radius + shape.radius\n            }\n\n            //Case 2: either of them are arcs\n            //In these cases, there are 2 scenarios\n            //Scenario 1: one of the vertexes will be inside the circle, this is easy to check\n            //Scenario 2: none of the vertex is inside the circle. There is only one possible explanation for this. In this case, check if \n            //the \"ray\" that connect the 2 center is inside both arcs, then check that the length of the ray is less than the length of both radius\n\n            if(findDistance2Point(this.absoluteX,this.absoluteY,shape.absoluteX,shape.absoluteY) > this.radius + shape.radius) return false\n\n            let ray1 = findAngle2Point(this.absoluteX,this.absoluteY,shape.absoluteX,shape.absoluteY)\n            let ray2 = findAngle2Point(shape.absoluteX,shape.absoluteY,this.absoluteX,this.absoluteY)\n            return ((ray1<this.maxAngle&&ray1>this.minAngle)&&(ray2<shape.maxAngle&&ray2>shape.minAngle))\n        }\n        else{\n            let side = shape.findSides()\n\n            for(let s of side){\n                let closest = findClosestPoint(this.absoluteX,this.absoluteY,s)\n                if(closest){\n                    if (this.pointInShape(closest[0],closest[1])) return true\n                }\n            }\n            return false\n        }\n    }\n}\n\nlght.roundedRectangle = class extends lght.rect{\n    constructor(property,parent){\n        super(property,parent)\n        this.borderRadius = (property.borderRadius) || 0\n        if(this.clip){\n            if(property.clipCanvas){\n                this.clipImage = property.clipCanvas;\n                this.clipCanvas=true\n            }\n            else{\n                this.clipImage = lght.sprite(this.clipImageLink,()=>{\n                    this.parent.updateVisual()\n                })\n            }\n        }\n    }\n\n    get clipImageLoaded(){\n        if(!this.clip) return false\n        if(this.clipCanvas) return true\n        return this.clipImage.complete\n    }\n}\n\nlght.poly = class extends lght.shape{\n    constructor(property,parent){\n        super(property,parent)\n        mergeDefaultPropertyObject(property,lght.defaultPolyOptions,this)\n        if(this.clip){\n            this.clipImage = lght.sprite(this.clipImageLink,()=>{\n                this.parent.updateVisual()\n            })\n        }\n    }\n\n    get clipImageLoaded(){\n        if(!this.clip) return false\n        return this.clipImage.complete\n    }\n\n    get polyPoints(){\n        if(!this.specialPolygon) return this.points\n        const radiusCoefficient = 360/this.numberOfSide\n        const result = []\n        for(let i = 0;i<this.numberOfSide;i++){\n            result.push(calculateRotatePoint(0,0,radiusCoefficient*i,this.radius))\n        }\n        return result\n    }  \n\n    get width(){\n        return this.findMax()[1] - this.findMax()[0]\n    }\n\n    get height(){\n        return this.findMax()[3] - this.findMax()[2]\n    }\n\n    get sideLength(){\n        if(!this.specialPolygon) return null\n        const radiusCoefficient = degToRad(360/this.numberOfSide)\n        return Math.sqrt(2*Math.pow(this.radius,2) - 2*Math.pow(this.radius,2)*Math.cos(radiusCoefficient))\n    }\n\n    findVertex(){\n        return this.polyPoints.map(([x,y])=>rotatePoint(this.absoluteX,this.absoluteY,x+this.absoluteX,y+this.absoluteY,this.rotation))\n    }\n}\n\nlght.line = class extends lght.shape{\n    constructor(property,parent){\n        super(property,parent)\n        mergeDefaultPropertyObject(property,lght.defaultLineOptions,this)\n    }\n\n    get rotatedPoints(){\n        return this.points.map(([x,y])=>(rotatePoint(this.absoluteX,this.absoluteY,x+this.absoluteX,y+this.absoluteY,this.rotation)))\n    }\n\n    findVertex(){\n        const result = []\n        const notIncluded = ([x,y]) => {\n            for (const position of result) {\n                const [x2,y2] = position\n                if(Math.round(x)===Math.round(x2) && Math.round(y)===Math.round(y2)) return false\n            }\n            return true\n        }\n        const point = [...this.rotatedPoints]\n        point.forEach(([x1,y1],index)=>{\n            if (index===point.length-1) return\n            const [x2,y2] = this.rotatedPoints[index+1]\n            const distance = findDistance2Point(x1,y1,x2,y2)\n            const tan = Math.atan((this.lineWidth/2)/distance)\n            const angle = findAngle2Point(x1,y1,x2,y2)\n            const angleQuadrant = radToDeg(tan)+angle\n            const firstDistance = Math.sqrt(distance*distance + (0.5*this.lineWidth)*(0.5*this.lineWidth))\n            const pointOneInFirstQuadrant = calculateRotatePoint(x1,y1,angleQuadrant,firstDistance)\n            const pointSecondInSecondQuadrant = calculateRotatePoint(...pointOneInFirstQuadrant,180+angle,distance)\n            const pointThreeInThirdQuadrant = calculateRotatePoint(...pointSecondInSecondQuadrant,270+angle,distance)\n            const pointFourInFourthQuadrant = calculateRotatePoint(...pointThreeInThirdQuadrant,angle,distance)\n            if(notIncluded(pointFourInFourthQuadrant)) result.push(pointFourInFourthQuadrant)\n            if(notIncluded(pointOneInFirstQuadrant)) result.push(pointOneInFirstQuadrant)\n            if(notIncluded(pointSecondInSecondQuadrant)) result.push(pointSecondInSecondQuadrant)\n            if(notIncluded(pointThreeInThirdQuadrant)) result.push(pointThreeInThirdQuadrant)\n        })\n        return result\n    }\n}\n\nlght.text = class extends lght.shape{\n    constructor (property,parent){\n        super(property,parent)\n        mergeDefaultPropertyObject(property,lght.defaultTextOptions,this)\n    }\n\n    get textSize(){\n        var c = lght.apps[0].context;\n        c.save();\n        c.font = this.font;\n        var width = c.measureText(this.text).width;\n        var height = c.measureText('gM').width;\n        c.restore();\n        return [width,height];\n    }\n\n    get w(){\n        return this.textSize[0] + this.borderWidthIfBorderIsOn\n    }\n\n    get h(){\n        return this.textSize[1] + this.borderWidthIfBorderIsOn\n    }\n\n    findVertex(){\n        let reference = [[1,-1],[-1,-1],[-1,0.5],[1,0.5]]\n        let result = []\n        reference.forEach(([rx,ry])=>{\n            let nx = this.absoluteX + 0.5*this.width*rx\n            let ny = this.absoluteY + 0.5*this.height*ry\n            result.push(rotatePoint(this.absoluteX,this.absoluteY,nx,ny,this.rotation))\n        })\n        return result\n    }\n}\n\nlght.img = class extends lght.shape{\n    constructor (property,parent){\n        super(property,parent)\n        mergeDefaultPropertyObject(property,lght.defaultImgOptions,this)\n        this.sprite = lght.sprite(this.spriteLink,()=>{\n            if(this.loadedFunction) this.loadedFunction()\n            this.parent.updateVisual()\n        })\n    }\n\n    get imageLoaded(){\n        return this.sprite.complete\n    }\n\n    get w(){\n        if(this.drawWidth) return this.drawWidth\n        if(this.imageLoaded){\n            if(this.drawHeight) return (this.drawHeight*this.sprite.width)/this.sprite.height\n            return this.sprite.width\n        }\n        return 0\n    }\n\n    get h(){\n        if(this.drawHeight) return this.drawHeight\n        if(this.imageLoaded){\n            if(this.drawWidth) return (this.drawWidth*this.sprite.height)/this.sprite.width\n            return this.sprite.height\n        }\n        return 0 \n    }\n\n    findVertex(){\n        let reference = [[1,-1],[-1,-1],[-1,1],[1,1]]\n        let result = []\n        reference.forEach(([rx,ry])=>{\n            let nx = this.absoluteX + 0.5*this.width*rx\n            let ny = this.absoluteY + 0.5*this.height*ry\n            result.push(rotatePoint(this.absoluteX,this.absoluteY,nx,ny,this.rotation))\n        })\n        return result\n    }\n}\n\n//Input\n //<--------------KEYBOARD INPUT GO HERE------------------->\n lght.object.prototype.attachQuickMovement = function (velocity,cooldown,func) {\n    var cd = true; var obj = this\n    document.addEventListener('keydown',function(key){\n        if(cd){\n            if(lght.inputReference.movementIndex.indexOf(key.key)!==-1){\n                obj.x += lght.inputReference.coeffIndex[lght.inputReference.movementIndex.indexOf(key.key)][0]*velocity;\n                obj.y += lght.inputReference.coeffIndex[lght.inputReference.movementIndex.indexOf(key.key)][1]*velocity;\n                obj.updateVisual();\n                if(func) func(key,obj);\n                cd = false; \n                setTimeout(()=>{cd = true;},cooldown)\n            }\n        }\n    })\n}\n\n//<--------------MOUSE INPUT GO HERE---------------------->\n\nlght.app.prototype.mouseInputInit = function(){\n    const attachEvent = (e,event)=>{\n        const [x,y] = this.translateMouseCoor(e)\n        if(this.objects.length === 0) return\n        for (let i = this.objects.length;i--;i>=0){\n            const obj = this.objects[i]\n            if(obj[event].length === 0) continue\n            if(!obj.display) continue\n            if(obj.pointInObject(x,y)){\n                for(let func of obj[event]) func(x,y)\n                break;\n            }\n        }\n        LargeLoop:for (let i = this.objects.length;i--;i>=0){\n            const obj = this.objects[i]\n            if(obj.shapes.length === 0) continue\n            if(!obj.display) continue\n            for(let a = obj.shapes.length;a--;a>=0){\n                const shape = obj.shapes[a]\n                if(shape[event].length === 0) continue\n                if(!shape.display) continue\n                if(shape.pointInShape(x,y)){\n                    for(let func of shape[event]) func(x,y)\n                    break LargeLoop;\n                }\n            }\n        }\n    }\n\n    this.canvas.addEventListener('mouseup',(e)=>attachEvent(e,'mouseUpEvent'))\n    this.canvas.addEventListener('mousemove',(e)=>attachEvent(e,'mouseMoveEvent'))\n    this.canvas.addEventListener('mousedown',(e)=>attachEvent(e,'mouseDownEvent'))\n}\n\n//PRESS EVENT FOR AN APP\nlght.object.prototype.pressedEvent = function (func) {\n    this.mouseUpEvent.push(func)\n}\n\n//MAKE AN OBJECT DRAGGABLE\nlght.object.prototype.makeDraggable = function (func,funcDone) {\n    this.onDrag = false; var obj = this; this.draggable = true;\n    var rx = 0; var ry = 0; \n\n    this.mouseDownEvent.push((x,y)=>{\n        if(obj.draggable){\n            if(!obj.onDrag){\n                obj.onDrag = true;\n                rx = x - obj.x; ry = y - obj.y;\n            }\n        }\n    })\n\n    document.addEventListener('mousemove', (e) => {\n        var c = this.parent.translateMouseCoor(e);\n        if(c[0] < 0 || c[0] >this.parent.canvas.width || c[1] < 0 || c[1] > this.parent.canvas.height) obj.onDrag = false\n        if(obj.onDrag){\n            obj.x = c[0] - rx; obj.y = c[1] - ry;\n            obj.updateVisual();\n            if(typeof func == 'function') func(obj);\n        }\n    })\n\n    this.parent.canvas.addEventListener('mouseup', (e) => {\n        if(obj.onDrag){\n            obj.onDrag = false;\n            if(funcDone) funcDone()\n        }\n    })\n}\n\n//HOVER EVENT\nlght.object.prototype.hoverEvent = function (funcin,funcout)  {\n    this.mouseIn = false; var obj = this;\n    document.addEventListener('mousemove', (e)=>{\n        var c = this.parent.translateMouseCoor(e);\n        if(c[0] < 0 || c[0] >this.parent.canvas.width || c[1] < 0 || c[1] > this.parent.canvas.height){\n            obj.mouseIn = false; if (funcout){funcout(obj);obj.updateVisual();};\n            return;\n        }\n        var touch = obj.pointInObject(c[0],c[1]);\n        if(obj.mouseIn && (!touch)){\n            obj.mouseIn = false; if (funcout){funcout(obj);obj.updateVisual();};\n        }\n        \n    })\n    this.mouseMoveEvent.push(()=>{\n        if(!obj.mouseIn){\n            obj.mouseIn = true; if(funcin){funcin(obj);obj.updateVisual();};\n        }\n    })\n}\n\n//INPUT FOR SHAPES\nlght.object.prototype.attachQuickMovement = function (velocity,cooldown,func) {\n    var cd = true; var obj = this\n    document.addEventListener('keydown',function(key){\n        if(cd){\n            if(lght.inputReference.movementIndex.indexOf(key.key)!==-1){\n                obj.x += lght.inputReference.coeffIndex[lght.inputReference.movementIndex.indexOf(key.key)][0]*velocity;\n                obj.y += lght.inputReference.coeffIndex[lght.inputReference.movementIndex.indexOf(key.key)][1]*velocity;\n                obj.updateVisual();\n                if(func) func(key,obj);\n                cd = false; \n                setTimeout(()=>{cd = true;},cooldown)\n            }\n        }\n    })\n}\n\n//<--------------MOUSE INPUT GO HERE---------------------->\n\n//PRESS EVENT FOR AN APP\nlght.shape.prototype.pressedEvent = function (func) {\n    this.mouseUpEvent.push(func)\n}\n\n//HOVER EVENT\nlght.shape.prototype.hoverEvent = function (funcin,funcout)  {\n    this.mouseIn = false; var obj = this;\n    document.addEventListener('mousemove', (e)=>{\n        if(!this.display) return\n        var c = this.parent.parent.translateMouseCoor(e);\n        if(c[0] < 0 || c[0] >this.parent.parent.canvas.width || c[1] < 0 || c[1] > this.parent.parent.canvas.height){\n            obj.mouseIn = false; if (funcout){funcout(obj);obj.parent.updateVisual();};\n            return;\n        }\n        var touch = obj.pointInShape(c[0],c[1]);\n        if(obj.mouseIn && (!touch)){\n            obj.mouseIn = false; if (funcout){funcout(obj);obj.parent.updateVisual();};\n        }\n        \n    })\n    this.mouseMoveEvent.push(()=>{\n        if(!obj.mouseIn){\n            obj.mouseIn = true; if(funcin){funcin(obj);obj.parent.updateVisual();};\n        }\n    })\n}\n\n//Animation\nlght.app.prototype.animate = function() {\n    if(lght.frameTime !== undefined && lght.lastFrame !== undefined){\n        let timeDifference = lght.frameTime - lght.lastFrame\n        this.objects.forEach(e => {\n            e.animate(timeDifference);\n            e.shapes.forEach(a => {\n                a.animate(timeDifference)\n            })\n        });\n    }\n}\n\nconst addAnimation = function(property,value,time,func){\n    this.animationCount++;\n    let id = this.animationCount;\n\n    let timeout = setTimeout(()=>{\n        changeByDotNotation(property,this,value)\n        this.cancelAnimation(id)\n        if (this.parent.updateVisual) this.parent.updateVisual()\n        else this.updateVisual()\n        if(func) func();\n    },time)\n\n    const alreadyAnimated = this.animations.find((animation)=>animation[0] === property)\n    if(alreadyAnimated){\n        this.cancelAnimation(alreadyAnimated[6])\n    }\n\n    this.animations.push([property,value,getByDotNotation(property,this),time,timeout,func,id]);\n    return id;\n}\n\nconst cancelAnimation = function(){\n    for(let id of [...arguments]){\n        let animation = this.animations.find(e=>e[6] === id)\n        let index = this.animations.findIndex(e=>e[6]===id)\n        if(!animation) return false\n        clearTimeout(animation[4])\n        this.animations.splice(index,1)\n    }\n}\n\nconst animate = function (time){\n    let obj = this\n    this.animations.forEach(animation=>{\n        let [property,value,init,timeUp] = animation\n        let newValue = getByDotNotation(property,obj) + (time/timeUp)*(value-init)\n        if(init < value && newValue > value) newValue = value\n        if(init>value && newValue < value) newValue = value\n        changeByDotNotation(property,obj,newValue)\n        if (this.parent.updateVisual) this.parent.updateVisual()\n        else this.updateVisual()\n    })\n}\n\nlght.animateFunctionReference = {\n    animate,\n    addAnimation,\n    cancelAnimation,\n}\n\nfor(var prop in lght.animateFunctionReference){\n    lght.object.prototype[prop] = lght.animateFunctionReference[prop];\n    lght.shape.prototype[prop] = lght.animateFunctionReference[prop];\n}\n\n//Draw\nlght.app.prototype.render = function(){\n    this.clearCanvas();\n    this.fillBackground();\n    this.renderShape();\n}\n\nlght.app.prototype.visualInit = function(){\n    this.backgroundColor = this.options.background;\n    this.context = this.canvas.getContext(\"2d\");\n}\n\nlght.app.prototype.renderShape = function(){\n    this.renderPositions();\n\n    this.objects.sort((a,b)=>a.zIndex -b.zIndex).forEach(obj=>{\n        if(obj.static) obj.drawPreloader();\n        else obj.draw();\n    })\n}\n\n//<-------------------BASIC CANVAS STUFF---------------------->\n//CLEARING CANVAS AND BACKGROUND COLOR\nlght.app.prototype.clearCanvas = function(){\n    this.context.save(); \n    this.context.clearRect(0,0,this.canvas.width,this.canvas.height); \n    this.context.restore();\n}\n\nlght.app.prototype.fillBackground = function(){\n    if(this.backgroundColor!=='none'){\n        this.context.save(); \n        this.context.fillStyle = this.backgroundColor;\n        this.context.fillRect(0,0,this.canvas.width,this.canvas.height);\n        this.context.restore();\n    }\n}\n\n/*POSITION INDICATOR FUNCTIONS GO HERE\nDraw all position indicators at once to save performance from context state change*/\nlght.app.prototype.renderPositions = function(){\n    this.context.save();\n    this.context.fillStyle = 'red';\n\n    this.objects.forEach(({x,y,positionIndicator}) => {\n        if(!positionIndicator) return\n        this.context.beginPath()\n        this.context.arc(x,y,5,0,2*Math.PI)\n        this.context.closePath()\n        this.context.fill()\n    });\n    \n    this.context.restore();\n}\n\n\n/* SHAPE PRERENDERING FUNCTIONS GO HERE\nShape prerendering prerender shapes on canvases to save performance*/\n\nlght.object.prototype.updateVisual = function(){\n    //If the dimension changes a new canvas have to be created\n    var max = this.findMax();\n    for(var i = 0;i<max.length;i++){\n        if(Math.round(max[i])!==Math.round(this.preloader.maxes[i])){\n            this.createPreloader(); return;\n        }\n    }\n\n    this.clearPreloader();\n\n    this.shapes.forEach(s=>{\n        let x = this.preloader.ox + s.x\n        let y = this.preloader.oy + s.y\n        lght.drawShape(this.preloader.context,x,y,s,)\n    })\n}\n\nlght.object.prototype.clearPreloader = function(){\n    this.preloader.context.clearRect(0,0,this.preloader.width,this.preloader.height);\n}\n\nlght.object.prototype.createPreloader = function(){\n    this.preloader = document.createElement('canvas');\n    \n    this.preloader.maxes = this.findMax();\n    let [minX,maxX,minY,maxY] = this.preloader.maxes\n\n    this.preloader.width = maxX-minX;\n    this.preloader.height = maxY-minY;\n\n    this.preloader.ox = this.x - minX;\n    this.preloader.oy = this.y - minY;\n\n    this.preloader.context = this.preloader.getContext('2d');\n\n    this.updateVisual();\n}\n\nlght.object.prototype.drawPreloader = function(){\n    if(!this.display) return\n    if(this.preloader.width >0 && this.preloader.height > 0){\n        let x = this.preloader.maxes[0] + this.preloader.width/2;\n        let y = this.preloader.maxes[2] + this.preloader.height/2;\n        x = Math.ceil(x); y = Math.ceil(y);\n\n        this.parent.context.save()\n        this.parent.context.translate(x,y)\n        lght.drawImg(this.parent.context,this.preloader,this.preloader.width,this.preloader.height);\n        this.parent.context.restore()\n    }\n}\n\n\n//<------------------SHAPE DRAWING FUNCTION---------------->\nlght.object.prototype.draw = function(){\n    if(!this.display) return\n    this.shapes.forEach(s=>{\n        lght.drawShape(this.parent.context,this.x+s.x,this.y+s.y,s)\n    })\n}\n\n//MASTER FUNCTION\nlght.drawShape = function(c,x,y,shape){\n    if(!shape.display) return\n    if(shape.border || shape.borderOnly) this.drawShapeKind(c,shape,x,y,true,1,shape.borderColor,shape.shadow);\n    else if(!shape.borderOnly && !shape.border) this.drawShapeKind(c,shape,x,y,false,shape.opacity,shape.color,shape.shadow);\n    if(!shape.borderOnly) this.drawShapeKind(c,shape,x,y,false,shape.opacity,shape.color);\n}\n\nlght.drawShapeKind = function(c,s,x,y,stroke,opacity,color,shadow){\n    opacity = opacity * s.parent.opacity;\n    if(opacity == 0 || opacity <0 ) return\n    x= Math.ceil(x); y = Math.ceil(y);\n\n    c.save()\n    c.globalAlpha = opacity\n    c.fillStyle = color\n    c.strokeStyle = color\n    c.lineWidth = s.borderWidth\n    c.translate(x,y)\n\n    if(shadow){\n        const {color,blur,offsetX,offsetY} = shadow\n        c.shadowColor = color\n        c.shadowBlur = blur\n        c.shadowOffsetX = offsetX\n        c.shadowOffsetY = offsetY\n    }\n\n    switch(s.kind){\n        case 'rect':\n            lght.drawRect(c, s.w, s.h, s.rotation, stroke); break;\n        case 'arc':\n            lght.drawArc(c, s.rad,s.arcDegree,s.rotation, stroke); break;\n        case 'text':\n            lght.drawText(c, s.text,s.font, stroke,s.textAlign ,s.w, s.h,s.rotation); break;\n        case 'img':\n            if(s.imageLoaded) lght.drawImg(c, s.sprite,s.w,s.h,s.rotation); break;\n        case 'poly':\n            lght.drawPoly(c, s.polyPoints,s.rotation, stroke); break;\n        case 'line':\n            if(stroke){\n                const points = s.points.map(((position,index)=>{\n                    const [x,y] = position\n                    if(index === 0){\n                        const angle = degToRad(findAngle2Point(...position,...s.points[index+1]))\n                        return [x-s.borderWidth*Math.cos(angle),y+s.borderWidth*Math.sin(angle)]\n                    }\n                    else if(index === s.points.length-1){\n                        const angle = degToRad(findAngle2Point(...position,...s.points[index-1]))\n                        return [x-s.borderWidth*Math.cos(angle),y+s.borderWidth*Math.sin(angle)]\n                    }\n                    else return [x,y]\n                }))\n                lght.drawLine(c,points,s.rotation,s.lineWidth+s.borderWidth);\n            }\n            else lght.drawLine(c,s.points,s.rotation,s.lineWidth); break;\n        case 'roundedRectangle':\n            lght.drawRoundedRectangle(c,s.w,s.h,s.rotation,s.borderRadius,stroke)\n            break\n        default:\n            break\n    }\n    if(s.clip && s.clipImageLoaded){\n        c.clip()\n        c.rotate(degToRad(s.rotation))\n        c.drawImage(s.clipImage,-s.width/2,-s.height/2,s.width,s.height)\n    }\n\n    c.restore()\n}\n\n//DRAWING RECTANGLE\nlght.drawRect = function(c,w,h,rotation,stroke){\n    c.rotate(degToRad(360-rotation))\n    if(stroke) c.strokeRect(-w/2,-h/2,w,h);\n    else c.fillRect(-w/2,-h/2,w,h);\n}\n\nlght.drawRoundedRectangle = (c,w,h,rotation,borderRadius,stroke)=>{\n    c.rotate(degToRad(360,rotation))\n    c.beginPath()\n    c.moveTo(0,-h*0.5)\n    c.lineTo(-w*0.5+borderRadius,-h*0.5)\n    c.quadraticCurveTo(-w*0.5,-h*0.5,-w*0.5,-h*0.5+borderRadius)\n    c.lineTo(-w*0.5,h*0.5-borderRadius)\n    c.quadraticCurveTo(-w*0.5,h*0.5,-w*0.5+borderRadius,h*0.5)\n    c.lineTo(w*0.5-borderRadius,h*0.5)\n    c.quadraticCurveTo(w*0.5,h*0.5,w*0.5,h*0.5-borderRadius)\n    c.lineTo(w*0.5,-h*0.5+borderRadius)\n    c.quadraticCurveTo(w*0.5,-h*0.5,w*0.5-borderRadius,-h*0.5)\n    c.lineTo(0,-h*0.5)\n    c.closePath()\n    if(stroke) c.stroke()\n    else c.fill()\n}\n\n//DRAWING CIRCLES\nlght.drawArc = function(c,rad,arcDegree,rotation,stroke){\n    c.beginPath();\n\n    const br = degToRad(360 - rotation - arcDegree);\n    const er = degToRad(360 - rotation);\n\n    if(arcDegree < 360){\n        const [x,y] = rotatePoint(0,0,rad,0,360-rotation-arcDegree);\n        c.moveTo(x,y); c.moveTo(0,0);\n    }\n\n    c.arc(0,0,rad,br,er);\n\n    if(stroke) c.stroke();\n    else c.fill();\n    c.closePath();\n\n}\n\n//DRAWING TEXT\n\nlght.drawText = function(c,text,font,stroke,textAlign,width,height,rotation){\n    c.textAlign = textAlign;\n    c.font = font;\n    c.rotate(degToRad(360-rotation))\n    if(stroke) c.fillText(text,Math.ceil(-width/2),Math.ceil(height/3.5));\n    else c.fillText(text,Math.ceil(-width/2),Math.ceil(height/3.5))\n}\n\n//DRAWING IMAGES\nlght.drawImg = function(c,sprite,w,h,rotation){\n    c.rotate(degToRad(360-rotation));\n    c.drawImage(sprite,-w/2,-h/2,w,h);\n}\n\nlght.drawPoly = (c,points,rotation,stroke) => {\n    if(points.length === 0 || !points) return \n    c.rotate(degToRad(360-rotation))\n    c.beginPath()\n    c.moveTo(...points[0])\n    points.forEach(([x,y])=>c.lineTo(x,y))\n    c.closePath()\n    if(stroke) c.stroke()\n    else c.fill()\n}\n\nlght.drawLine = (c,points,rotation,lineWidth)=>{\n    c.beginPath()\n    c.rotate(degToRad(360-rotation))\n    c.moveTo(...points[0])\n    points.forEach(([x,y])=>c.lineTo(x,y))\n    c.lineWidth = lineWidth\n    c.stroke()\n}\n\nlght.object.prototype.addShape = function (property) {\n    let shape = new lght[property.kind](property,this);\n    this.updateVisual()\n    return shape\n}\n\nlght.app.prototype.addObject = function (property) {\n    return new lght.object(property,this);\n}\n\nlght.app.prototype.removeObject = function (obj) {\n    this.objects.splice(this.objects.indexOf(obj),1);\n}\n\nexport default lght","import { random ,findAngle2Point, degToRad} from '../lght/util/util';\nimport lght from '../lght/lght'\n\nclass View{\n    constructor(canvas){\n        this.app = new lght.app(canvas)\n        this.app.canvas.width = 1700\n        this.app.canvas.height = 1300\n        this.app.backgroundColor = '#00d7e1';\n\n        const addLayerViaName = (...args)=>[...args].forEach(name=>this[name] = this.addLayer())\n        \n        addLayerViaName('background','resourceElement','buttonElement','portElement','roadElement','structureElement','robberElement','diceElement')\n\n        this.hexProperty = {\n            kind:'poly',\n            radius:80,\n            numberOfSide:6,\n            rotation:90,\n            specialPolygon:true,\n            color:'green',\n        }\n\n        this.inititiateArray('hexMap','buttonMap','numberMap','dotMap','portMap',\"houses\",\"city\",\"roads\",\"settlements\",\"cities\",\"structures\")\n\n        this.getPositionMatrix()\n\n        this.createDiceDeck()\n        this.createDevDeck()\n        this.createActionObject()\n        this.createPlayerDeck()\n        this.drawAnnouncement()\n        this.setUpResourceIcon()\n        this.setUpTurnTimer()\n        this.configureStartGameMessage()\n        this.configureMonopolyResourceInterface()\n    }\n    //250 360\n\n    configureColorCode(playerCode,turnObject){\n        this.colorCode = playerCode\n        this.turnObject = turnObject\n    }\n\n    get currentColorCode(){\n        return this.colorCode[this.turnObject.turn]\n    }\n\n    configureStartGameMessage(){\n        const startGameObject = this.app.addObject({x:this.app.canvas.width-150,y:this.app.canvas.height-120,display:false})\n        const text = startGameObject.addShape({kind:'text',text:'Start Game',color:'orange',font:'40px Times News Roman'})\n        startGameObject.addShape({kind:'roundedRectangle',w:200,h:100,display:false})\n        let activated = false\n        let resolveFunction = ()=>{}\n        const fadeIn = ()=>{\n            if(!activated){\n                text.opacity = 1;\n            }\n            else text.addAnimation('opacity',1,1000,fadeOut)\n        }\n        const fadeOut = ()=>{\n            if(!activated){\n                text.opacity = 1\n            }\n            else text.addAnimation('opacity',0,1000,fadeIn)\n        }\n\n        startGameObject.pressedEvent(()=>{\n            activated = false\n            startGameObject.display = false\n            resolveFunction()\n        })\n\n        this.initiateStartGameMessage = (func=()=>{})=>{\n            if(!activated){\n                resolveFunction = func\n                activated = true\n                startGameObject.display = true\n                fadeOut()\n            }\n        }\n    }\n\n    addYellowHoverEvent(shape){\n        let previousColor = shape.color\n        shape.hoverEvent(()=>{\n            previousColor = shape.color\n            shape.color = 'yellow';\n            shape.parent.updateVisual()\n        },()=>{\n            shape.color = previousColor\n            shape.parent.updateVisual()\n        })\n    }\n\n    configureStealInterface(model){\n        const imageReference = ['assets/wheatIcon.png','assets/rockIcon.png','assets/sheepIcon.png','assets/woodIcon.png','assets/brickIcon.png']\n        const resourceReference = ['wheat','rock','sheep','wood','brick']\n\n        this.halfCard = this.addLayer()\n        this.stealInterface = this.addLayer()\n\n        this.halfCard.display = false\n        const halfw = 400; const halfh = 300\n        this.halfCard.addShape({kind:'roundedRectangle',w:400,h:300,color:'#ffffed',borderRadius:20,border:true,borderColor:'black',borderWidth:10,shadow:{blur:7,offsetX:3,color:'black'}})\n        const letterHeadText = this.halfCard.addShape({kind:'text',font:'30px Times News Roman',y:-halfh/2+20,text:'Discard your cards'})\n        \n        let numberLeftText = 'Need to Discard'\n        let numberLeftElement = this.halfCard.addShape({kind:'text',font:'25px Times News Roman',y:-halfh/2 + 55,text:`${numberLeftText}: 4`,color:'grey'})\n\n        let drawWidth = 45\n        let spacing = 30\n        let total = resourceReference.length * (drawWidth + spacing)\n        \n        //data\n        let numberChosen = [0,0,0,0,0]\n        let numberNeeded = 0\n        let numberLeft = [0,0,0,0,0]\n        let mode = 'steal'\n        //steal/plenty\n        let actionFunction = ()=>{}\n        const actionFuctionFactory = (func)=>{\n            actionFunction = (numberChosen)=>{\n                this.halfCard.display = false\n                func(numberChosen)\n            }\n        }\n        let getNumberLeft = ()=>numberChosen.map((e,i)=>model[`${resourceReference[i]}Amount`] + ((mode==='steal')?-1:1)*numberChosen[i])\n\n        //elements\n        let icons = []\n        let numbers = []\n        let chosen = []\n        let addModifier = []\n        let subtractModifier = []\n\n        let modifierFunctionFactory = (func)=>()=>{func();updateNumbers()}\n        for(let i = 0;i<resourceReference.length;i++){\n            let x = -total/2 + 15 + 0.5*drawWidth + i*(drawWidth+spacing)\n            icons.push(this.halfCard.addShape({kind:'img',drawWidth,y:-20,spriteLink:imageReference[i],x}))\n            numbers.push(this.halfCard.addShape({kind:'text',y:20,font:'25px Times News Roman',x,text:`(2)`,color:'gray'}))\n            chosen.push(this.halfCard.addShape({kind:'text',y:50,font:'25px Times News Roman',x,text:`0`,color:'gray'}))\n            let leftModifier = this.halfCard.addShape({kind:'text',y:80,font:'35px Times News Roman',text:'+',x:x-10})\n            let rightModifier = this.halfCard.addShape({kind:'text',y:80,font:'35px Times News Roman',text:'-',x:x+10})\n            this.addYellowHoverEvent(leftModifier)\n            this.addYellowHoverEvent(rightModifier)\n            addModifier.push(leftModifier)\n            subtractModifier.push(rightModifier)\n            \n            // eslint-disable-next-line no-loop-func\n            leftModifier.pressedEvent(modifierFunctionFactory(()=>{\n                if(!numberNeeded) return\n                if(!(model[`${resourceReference[i]}Amount`] - numberChosen[i])) return\n                numberChosen[i]++\n                numberNeeded-=1\n            }))\n\n            // eslint-disable-next-line no-loop-func\n            rightModifier.pressedEvent(modifierFunctionFactory(()=>{\n                if(!numberChosen[i]) return\n                numberChosen[i]--\n                numberNeeded+=1\n            }))\n        }\n        let acceptSymbol = this.halfCard.addShape({kind:'img',spriteLink:'assets/tickIcon.png',drawWidth:30,y:halfh/2-25})\n        acceptSymbol.pressedEvent(()=>{\n            actionFunction(numberChosen)\n        })\n        let updateNumbers = ()=>{\n            numberLeftElement.text = `${numberLeftText} ${numberNeeded}`\n            numberLeft = getNumberLeft()\n            numberChosen.forEach((e,i)=>{\n                numbers[i].text = `(${numberLeft[i]})`\n                chosen[i].text = e\n            })\n            if(numberNeeded) acceptSymbol.display = false\n            else acceptSymbol.display = true\n            this.halfCard.updateVisual()\n        }\n\n        this.initiateSteal = (cardNeeded)=>new Promise(r=>{\n            mode = 'steal'\n            letterHeadText.text = 'Discard your cards'\n            numberLeftText = 'Card to discard:'\n            numberNeeded = cardNeeded\n            numberChosen = [0,0,0,0,0]\n            numberLeft = getNumberLeft()\n            actionFuctionFactory(r)\n            updateNumbers()\n            this.halfCard.display = true\n        })\n\n        this.initiatePlenty = ()=>new Promise(r=>{\n            mode = 'plenty'\n            letterHeadText.text = 'Choose your card'\n            numberLeftText = 'Card to choose:'\n            numberNeeded = 2\n            numberChosen = [0,0,0,0,0]\n            numberLeft = getNumberLeft()\n            actionFuctionFactory(r)\n            updateNumbers()\n            this.halfCard.display = true\n        })\n        \n        let resolve\n        this.stealInterface.addShape({kind:'roundedRectangle',w:300,h:300,color:'#ffffed',borderRadius:20,border:true,borderColor:'black',borderWidth:10,shadow:{blur:7,offsetX:3,color:'black'}})\n        this.stealInterface.addShape({kind:'text',font:'30px Times New Roman',y:-120,text:'Steal from...',color:'grey'})\n        let stealTextProp = {kind:'text',font:'35px Times News Roman'}\n        let positions = [this.stealInterface.addShape({...stealTextProp,y:-70,display:false}),\n                        this.stealInterface.addShape({...stealTextProp,y:0,display:false}),\n                        this.stealInterface.addShape({...stealTextProp,y:70,display:false})]\n        positions.forEach((e,i)=>{\n            this.addYellowHoverEvent(e)\n            e.pressedEvent(()=>{\n                positions.forEach((e)=>e.display = false)\n                this.stealInterface.display = false\n                resolve(i)\n            })\n        })\n        this.stealInterface.display = false\n        \n        \n        this.initiateStealFromOther = (usernames,color)=>{\n            return new Promise((r)=>{\n                resolve = r\n                usernames.forEach((e,i)=>{\n                    positions[i].text = e\n                    positions[i].color = color[i]\n                    positions[i].display = true\n                    console.log(color[i])\n                })\n                console.log(positions)\n                this.stealInterface.updateVisual()\n                this.stealInterface.display = true\n            })\n        }\n    }\n\n    configureMonopolyResourceInterface = ()=>{\n        const monopoly = this.addLayer()\n        monopoly.display = false\n        monopoly.addShape({kind:'roundedRectangle',w:400,h:200,color:'#ffffed',borderRadius:10,border:true,borderColor:'black',borderWidth:10,shadow:{blur:7,offsetX:3,color:'black'}})\n        monopoly.addShape({kind:'text',text:'Choose Monopoly Resource:',font:'25px Times News Roman',y:-80})\n        const resourceReference = ['wheat','rock','sheep','wood','brick']\n        const imageReference = ['assets/wheatIcon.png','assets/rockIcon.png','assets/sheepIcon.png','assets/woodIcon.png','assets/brickIcon.png']\n        const drawWidth = 45\n        const spacing = 35\n        const w = 400\n        const total = resourceReference.length*(drawWidth) + (resourceReference.length-1)*spacing\n        let resolveFunction = ()=>{}\n        const icons = imageReference.map((link,i)=>{\n            const shape = monopoly.addShape({kind:'img',drawWidth,spriteLink:link,x:-total/2 + 0.5*drawWidth + i*spacing + i*drawWidth})\n            shape.hoverEvent(()=>{\n                shape.addAnimation('drawWidth',65,200)\n            },()=>{\n                shape.addAnimation('drawWidth',drawWidth,200)\n            })\n            shape.pressedEvent(()=>{\n                monopoly.display = false\n                resolveFunction(resourceReference[i])\n            })\n            return shape\n        })\n        this.initiateMonpolyResourceChoosing = ()=>{\n            monopoly.display = true\n            return new Promise(r=>resolveFunction = r)\n        }\n    }\n\n    receiveData({grid,playerUsernames}){\n        const {resourceBoard,numberBoard} = grid\n        this.resourceBoard = resourceBoard\n        this.numberBoard = numberBoard\n        this.createBoard()\n        //Finding the desert to add the robber\n        let robberPosition\n        BigLoop:for(let y = 0;y<this.resourceBoard.length;y++){\n            for(let x=0;x<this.resourceBoard[y].length;x++){\n                if(this.resourceBoard[y][x] === 'Desert'){\n                    robberPosition = [y,x]\n                    break BigLoop\n                }\n            }\n        }\n        let [robberX,robberY] = this.positionMatrix[robberPosition[0]-1][robberPosition[1]-1]\n        this.robber = this.addRobber(robberX,robberY)\n    }\n\n    moveRobber(location){\n        let [robberX,robberY] = this.positionMatrix[location[0]-1][location[1]-1]\n        robberX = this.robberElement.x + robberX\n        robberY = this.robberElement.y + robberY\n        this.robberElement.addAnimation('x',robberX,500)\n        this.robberElement.addAnimation('y',robberY,500)\n    }\n\n    selectSettlementLocationFrom(l){\n        return new Promise(r=>{\n            const locations = l.map(loc=>{\n                const house = this.drawPossibleSettlement(loc)\n                house.pressedEvent(()=>{\n                    locations.forEach(e=>e.kill())\n                    r(loc)\n                })\n                return house\n            })\n        })\n    }\n\n    drawAllPossibleSettlementLocation(locations){\n        const shapes = []\n        locations.forEach((l,i)=>{\n            const shape = this.drawPossibleSettlement(l)\n            shape.location = l\n            shapes.push(shape)\n        })\n        return shapes\n    }\n\n    setUpTurnTimer(){\n        this.turnTimer = null\n        this.turnTimerInterval = null\n        this.turnTimerElement = this.app.addObject({x:100,y:70,display:false})\n        this.turnTimerText = this.turnTimerElement.addShape({kind:'text',color:'blue',font:'50px Times News Roman',text:30})\n        this.turnTimerElement.addShape({kind:'roundedRectangle',w:70,h:70,display:false})\n        this.turnTimerElement.addShape({kind:'text',font:'25px Times News Roman',text:'Time left:',y:-40})\n        this.startTurnTimer = (time)=>{\n            this.cancelTurnTimer()\n            let timeLeft = time/1000\n            this.turnTimerInterval = setInterval(()=>{\n                this.turnTimerText.text = timeLeft\n                this.turnTimerElement.updateVisual()\n                timeLeft--\n            },1000)\n            this.turnTimer = setTimeout(()=>this.turnTimerElement.addAnimation('opacity',0,1000,()=>this.turnTimerElement.display = false),time)\n            this.turnTimerElement.display = true\n            this.turnTimerElement.opacity = 0\n            this.turnTimerElement.addAnimation('opacity',1,1000)\n        }\n        this.cancelTurnTimer = ()=>{\n            clearInterval(this.turnTimerInterval)\n            clearTimeout(this.turnTimer)\n            this.turnTimerElement.addAnimation('opacity',0,1000,()=>this.turnTimerElement.display = false)\n        }\n    }\n\n    animateResourceToLeaderBoard(res,[posY,posX]){\n        const makeResourceIcon = (link)=>this.robberElement.addShape({kind:'img',drawWidth:40,spriteLink:link,display:false})\n        const [x,y] = this.positionMatrix[posY][posX]\n        const resource = makeResourceIcon(`assets/${res}Icon.png`)\n        resource.x = x\n        resource.y = y\n        resource.display = true\n        const [toX,toY] = this.findDistanceFromShapeTo(resource,this.leaderBoardObject)\n        resource.addAnimation('x',toX,1000,()=>resource.kill())\n        resource.addAnimation('y',toY,1000)\n    }\n\n    setUpResourceIcon(){\n        const makeResourceIcon = (link)=>this.robberElement.addShape({kind:'img',drawWidth:40,spriteLink:link,display:false})\n        this.wheatResourceIcon = makeResourceIcon('assets/wheatIcon.png')\n        this.rockResourceIcon = makeResourceIcon('assets/rockIcon.png')\n        this.brickResourceIcon = makeResourceIcon('assets/brickIcon.png')\n        this.sheepResourceIcon = makeResourceIcon('assets/sheepIcon.png')\n        this.woodResourceIcon = makeResourceIcon('assets/woodIcon.png')\n    }\n\n    animateDevCardToLeaderBoard(){\n        this.animateDevCard.display = true\n        this.animateDevCard.addAnimation('x',this.animateDevCard.x + (this.leaderBoardObject.x - this.animateDevCard.absoluteX),500,()=>{\n            this.animateDevCard.x = 0\n            this.animateDevCard.display =  false\n        })\n    }\n\n    animateDevCardToPlayerDeck(){\n        console.log('fired')\n        this.animateDevCard.display = true\n        console.log(this.animateDevCard.y)\n        this.animateDevCard.addAnimation('y',1000,800,()=>{\n            console.log('done')\n            this.animateDevCard.y = 0\n            console.log(this.animateDevCard.y)\n            this.animateDevCard.display =  false\n        })\n    }\n\n    createTradingObject(usernames,model){\n        const w= 700\n        const h = 700\n        let mode = 'send'\n        let onTrade = false\n        const queue = []\n        let proposer = ''\n        let bankAmountAllowed = 0\n        let cancelTrade = ()=>{}\n        let proposeTrade = ()=>{}\n        let receiveMode = 'Accept'\n        //Mode is either send,receive, or bank\n        \n        this.tradingElement = this.addLayer()\n        this.tradingElement.display = false\n        const addYellowHoverEvent = shape=>{\n            let previousColor = shape.color\n            shape.hoverEvent(()=>{\n                shape.color = 'yellow';\n                this.tradingElement.updateVisual()\n            },()=>{\n                shape.color = previousColor\n                this.tradingElement.updateVisual()\n            })\n        }\n        this.tradingElement.addShape({kind:'roundedRectangle',w,h,color:'#ffffed',borderRadius:40,border:true,borderColor:'black',borderWidth:10,shadow:{blur:7,offsetX:3,color:'black'}})\n        this.tradingElement.addShape({kind:'text',y:-h/2+45, font:'bold 40px Times News Roman',text:'Trade'})\n        this.tradingElement.addShape({kind:'text',x:-w/2 + 200,y:-h/2+90,font:'30px Times News Roman',text:'My Resources'})\n        this.tradingElement.addShape({kind:'text',x:w/2 - 180,y:-h/2+90,font:'30px Times News Roman',text:'Resource Demanded'})\n        this.tradingElement.addShape({kind:'line',points:[[0,-h/2+90],[0,h/2 - 230]]})\n        this.tradingElement.addShape({kind:'line',points:[[-w/2 + 40, -h/2 + 120],[w/2 - 40, -h/2 + 120]]})\n        let ys = [-h/2+170,-h/2+230,-h/2+290,-h/2+350,-h/2+410]\n        const imageReference = ['assets/wheatIcon.png','assets/rockIcon.png','assets/sheepIcon.png','assets/woodIcon.png','assets/brickIcon.png']\n        const resourceReference = ['wheat','rock','sheep','wood','brick']\n        let amountGivenReference = [0,0,0,0,0]\n        let amountDemandReference = [0,0,0,0,0]\n        let proposeTo = [...usernames]\n        const createImageLine = (x)=>imageReference.forEach((image,index)=>this.tradingElement.addShape({kind:'img',spriteLink:image,drawWidth:40,x,y:ys[index]}))\n\n        let x = -w/2+100\n        createImageLine(x)\n        x = 60\n        createImageLine(x)\n\n        const addModifier = (icon,x,y,id,func)=>{\n            const modifier = this.tradingElement.addShape({kind:'text',text:icon,font:`50px Times News Roman`,x,y})\n            addYellowHoverEvent(modifier)\n            modifier.pressedEvent(()=>func(id))\n        }\n        let ys2 = ys.map((a)=>a-10)\n\n        const addModifierLine = (icon,x,func)=>ys2.map((y,index)=>addModifier(icon,x,y,index,func))\n        const addNumberLine = (numbers,x)=>numbers.map((number,index)=>this.tradingElement.addShape({kind:'text',text:number,font:'30px Times News Roman',x,y:ys[index],color:'gray'}))\n        x = -60\n        const modifierFunctionFactory = (func)=>(id)=>{\n            func(id);\n            if(mode === 'receive') propose.text = 'Counter propose'\n            if(mode === 'receive') receiveMode = 'Response'\n            updateNumbers();\n        }\n\n        const subtractModUser = addModifierLine('-',x,modifierFunctionFactory((id)=>{\n            if(!amountGivenReference[id]) return\n            if(mode === 'bank'){\n                let rate = 4\n                if(model.tradingPriveleges.randomTrade) rate = 3\n                if(model.tradingPriveleges[resourceReference[id]+\"Trade\"]) rate = 2\n                if(!bankAmountAllowed) return\n                else{\n                    bankAmountAllowed--\n                    return amountGivenReference[id]-=rate\n                }\n            }\n            amountGivenReference[id]--\n        }))\n        x = -180\n        const addModUser =  addModifierLine('+',x,modifierFunctionFactory((id)=>{\n            if(mode === 'bank'){\n                let rate = 4\n                if(model.tradingPriveleges.randomTrade) rate = 3\n                if(model.tradingPriveleges[resourceReference[id]+\"Trade\"]) rate = 2\n                if(model[resourceReference[id]+\"Amount\"] < ((amountGivenReference[id]+1) * rate)) return\n                else{\n                    bankAmountAllowed++\n                    return amountGivenReference[id]+=rate\n                }\n            }\n            if(model[`${resourceReference[id]}Amount`] - amountGivenReference[id]) amountGivenReference[id]++\n        }))\n        x=-120\n        const numberOfResourceGiven = addNumberLine(amountGivenReference,x)\n        x=130\n        addModifierLine('+',x,modifierFunctionFactory((id)=>{\n            if(mode === 'bank'){\n                if(bankAmountAllowed){\n                    amountDemandReference[id]++\n                    return bankAmountAllowed--\n                }\n                else return\n            }\n            amountDemandReference[id]++\n        }))\n        x=190\n        const numberOfResourceDemand = addNumberLine(amountDemandReference,x)\n        x=250\n        addModifierLine('-',x,modifierFunctionFactory((id)=>{\n            if(!amountDemandReference[id]) return\n            if(mode === 'bank'){\n                amountDemandReference[id]--\n                return bankAmountAllowed++\n            }\n            amountDemandReference[id]--\n        }))\n        x=-w/2 + 40\n\n        const getResourceLeft = ()=>amountGivenReference.map((e,i)=>model[`${resourceReference[i]}Amount`] - e)\n        const numberOfResourceLeft = addNumberLine(getResourceLeft().map(a=>`(${a})`),x)\n        \n        const proposeTradeLetterHead = this.tradingElement.addShape({kind:'text',text:'Propose Trade To:',x:-w/2 + 150,y:h/2 - 200,font:'30px Times News Roman'})\n        const proposerElement = this.tradingElement.addShape({kind:'text',text:'',x:-w/2 + 100,y:h/2-160,font:'25px Times News Roman',display:false})\n\n        const updateNumbers = ()=>{\n            numberOfResourceDemand.forEach((e,i)=>e.text = amountDemandReference[i])\n            numberOfResourceGiven.forEach((e,i)=>e.text = amountGivenReference[i])\n            const resourceLeft = getResourceLeft().map(a=>`(${a})`)\n            numberOfResourceLeft.forEach((e,i)=>e.text = resourceLeft[i])\n            this.tradingElement.updateVisual()\n        }\n\n        const usernamesElement = [1,2,3].map((e,i)=>{\n            const elem = this.tradingElement.addShape({kind:'text',text:'',x:-w/2 + 100,y:h/2-160+i*40,font:'25px Times News Roman'})\n            elem.x = -w/2 + elem.w/2 + 30\n            return elem\n        })\n\n        const addCheck = (y,id)=>{\n            const check = this.tradingElement.addShape({kind:'arc',color:'red',border:true,rad:10,borderWidth:10,borderColor:'brown',x:-20,y})\n            let username\n            check.pressedEvent(()=>{\n                if(check.borderOnly) proposeTo.splice(id,0,username)\n                if(!check.borderOnly){\n                    username = proposeTo[id]\n                    proposeTo.splice(id,1)\n                }\n                check.borderOnly = !check.borderOnly;\n                this.tradingElement.updateVisual()\n            })\n            return check\n        }\n        const checkElement = []\n        for(let i = 0;i<3;i++){\n            checkElement.push(addCheck(h/2 - 160 + i*40,i))\n        }\n\n        const bank = this.tradingElement.addShape({\n            kind:'text',text:'Trade with Bank',font:'30px Times News Roman',\n            y:h/2 - 200,x:20\n        })\n        bank.x = bank.w/2 + 20\n        addYellowHoverEvent(bank)\n        bank.pressedEvent(()=>{\n            if(mode==='send') changeMode('bank')\n            else changeMode('send')\n        })\n\n        const propose = this.tradingElement.addShape({\n            kind:'text',text:'Propose Trade',y:h/2-140,font:'30px Times News Roman'\n        })\n        const cancel = this.tradingElement.addShape({\n            kind:'text',text:'Cancel Trade',y:h/2-80,font:'30px Times News Roman'\n        })\n        propose.x = propose.w/2 + 20\n        cancel.x = cancel.w/2 + 20\n        addYellowHoverEvent(propose)\n        addYellowHoverEvent(cancel)\n        const acceptSymbol = this.tradingElement.addShape({kind:'img',spriteLink:'assets/tickIcon.png',drawWidth:40,x:w/2-80,y:h/2-137})\n        const cancelSymbolBottom = this.tradingElement.addShape({kind:'img',spriteLink:'assets/crossIcon.png',drawWidth:40,x:w/2-80,y:h/2-75})\n        const cancelSymbolTop = this.tradingElement.addShape({kind:'img',spriteLink:'assets/crossIcon.png',drawWidth:40,x:-w/2+40,y:-h/2+40})\n        \n        const doneFunctionFactory = (func)=>()=>{\n            console.log('pass1')\n            if(amountGivenReference.reduce((t,e)=>t+e,0) === 0 && amountDemandReference.reduce((t,e)=>t+e,0)===0) return false\n            console.log('pass2')\n            if(mode === 'send' && proposeTo.length === 0) return false\n            console.log('pass3')\n            this.tradingElement.display = false\n            onTrade = false\n            if(mode === 'receive'){\n                queue.splice(0,1)\n                if(queue.length >0){\n                    onTrade = true\n                    this.tradeReceiver()\n                    this.tradingElement.display = true\n                }\n            }\n            else if(queue.length >0){\n                changeMode('receive')\n            }\n            func()\n        }\n\n        const rejectFunctionFactory = (func)=>()=>{\n            this.tradingElement.display = false\n            onTrade = false\n            if(mode === 'receive'){\n                queue.splice(0,1)\n                if(queue.length >0){\n                    onTrade = true\n                    this.tradeReceiver()\n                    this.tradingElement.display = true\n                }\n            }\n            else if(queue.length >0){\n                changeMode('receive')\n            }\n            func()\n        }\n\n        const proposeTradeFunction = ()=>{\n            const result = doneFunctionFactory(()=>{})()\n            if(result === false) return\n            if(mode === 'receive'){\n                proposeTrade([receiveMode,mode,amountGivenReference,amountDemandReference,proposer])\n            }\n            else if(mode === 'send'){\n                proposeTrade([mode,amountGivenReference,amountDemandReference,proposeTo])\n            }\n            else if (mode === 'bank'){\n                proposeTrade([mode,amountGivenReference,amountDemandReference])\n            }\n        }\n\n        cancel.pressedEvent(()=>rejectFunctionFactory(cancelTrade)())\n        cancelSymbolBottom.pressedEvent(()=>rejectFunctionFactory(cancelTrade)())\n        cancelSymbolTop.pressedEvent(()=>rejectFunctionFactory(cancelTrade)())\n\n        acceptSymbol.pressedEvent(()=>proposeTradeFunction())\n        propose.pressedEvent(()=>proposeTradeFunction())\n\n        const initiateReceiveMode = ()=>{\n            deiniateBankMode()\n            deinitiateSendMode()\n            proposerElement.display = true\n            proposeTradeLetterHead.text = 'Proposed By:'\n            this.tradingElement.updateVisual()\n        }\n\n        const deiniateReceiveMode = ()=>{\n            proposeTradeLetterHead.text = 'Proposed To:'\n            propose.text = 'Propose Trade'\n            proposerElement.display = false\n        }\n\n        const initiateSendMode = ()=>{\n            deiniateReceiveMode()\n            deiniateBankMode()\n            bank.display = true\n            checkElement.forEach(e=>e.display = false)\n            usernamesElement.forEach(e=>e.display = false)\n            usernames.filter(e=>e!==usernames[model.playerid]).forEach((e,i)=>{\n                checkElement[i].display = true\n                usernamesElement[i].text = e\n                usernamesElement[i].x = -w/2 + usernamesElement[i].w/2 + 30\n                usernamesElement[i].display = true\n            })\n            this.tradingElement.updateVisual()\n        }\n\n        const deinitiateSendMode = ()=>{\n            checkElement.forEach(s=>s.display = false)\n            usernamesElement.forEach(s=>s.display= false)\n            bank.display = false\n        }\n\n        const initiateBankMode = ()=>{\n            deiniateReceiveMode()\n            deinitiateSendMode()\n            proposeTradeLetterHead.display = false\n            bank.display = true\n            bank.text = 'Trade with Players'\n            this.tradingElement.updateVisual()\n        }\n\n        const deiniateBankMode = ()=>{\n            bank.display = false\n            proposeTradeLetterHead.display = true\n            bank.text = 'Trade with Bank'\n            this.tradingElement.updateVisual()\n        }\n\n        const changeMode = (m)=>{\n            mode = m\n            this.tradingElement.display = true\n            onTrade = true\n            if(mode === 'receive'){\n                receiveMode = 'Accept'\n                this.updateTradeReceiver()\n                initiateReceiveMode()\n            }\n            if(mode === 'send'){\n                amountGivenReference = [0,0,0,0,0]\n                amountDemandReference = [0,0,0,0,0]\n                proposeTo = [...usernames].filter(e=>e!==usernames[model.playerid])\n                checkElement.forEach(e=>e.borderOnly = false)\n                initiateSendMode()\n            }\n            if(mode === 'bank'){\n                amountGivenReference = [0,0,0,0,0]\n                amountDemandReference = [0,0,0,0,0]\n                bankAmountAllowed = 0\n                initiateBankMode()\n            }\n            updateNumbers()\n        }\n\n        this.updateTradeReceiver = ()=>{\n            let [proposing,resourceDemanded,resourceGiven] = queue[0]\n            //2 cases, failed trade and possible trade\n            for(let i = 0;i<resourceDemanded.length;i++){\n                let left = model[resourceReference[i]+'Amount']\n                if(left < resourceDemanded[i]){\n                    //Trade failed\n                    queue.splice(0,1)\n                    if(queue.length > 0) this.updateTradeReceiver()\n                    else{\n                        onTrade = false\n                        this.tradingElement.display = false\n                    }\n                    return\n                }\n            }\n\n            amountGivenReference = resourceDemanded\n            amountDemandReference = resourceGiven\n            proposer = proposing\n            propose.text = 'Accept Trade'\n            proposerElement.text = proposing\n            updateNumbers()\n        }\n\n        this.receiveTrade = (...args)=>{\n            queue.push([...args])\n            if(!onTrade){\n                changeMode('receive')\n            }\n            return new Promise((resolve,reject)=>{\n                proposeTrade = resolve\n                cancelTrade = reject\n            })\n        }\n\n        this.initiateTrade = ()=>{\n            if(onTrade) return\n            else return new Promise((resolve,reject)=>{\n                proposeTrade = resolve\n                cancelTrade = reject\n                changeMode('send')\n                updateNumbers()\n                this.tradingElement.display = true\n            })\n        }\n    }\n\n    drawAnnouncement(){\n        let animationDuration = 500\n\n        this.announcementQueue = []\n        this.announcmentPerpetual = []\n        this.onAnnouncementPerpetual = false\n        this.onAnnoucementChanged = false\n        \n        //Format: [text,color,time/perpetual,started]\n        this.announcement = this.app.addObject({x:this.app.canvas.width/2,y:80,positionIndicator:false})\n        this.annoucementText = this.announcement.addShape({kind:'text',font:'70px Times News Roman',color:'orange',text:'',display:false})\n        this.announcement.addShape({kind:'roundedRectangle',w:this.app.canvas.width/2,h:200,display:false})\n        const fadeOut = (func)=>this.annoucementText.addAnimation('opacity',0,animationDuration,()=>{this.annoucementText.display=false;if(func) func()})\n        const fadeIn = (funcDone)=>this.annoucementText.addAnimation('opacity',1,animationDuration,funcDone)\n        const fadeOutThenFadeIn = (func,funcDone)=> fadeOut(()=>{func();this.annoucementText.display = true; fadeIn(funcDone)})\n\n        this.updateAnnouncement = ()=>{\n            if(this.announcementQueue.length > 0 && !this.announcementQueue[0][3]){\n                let [text,color,time] = this.announcementQueue[0]\n                fadeOutThenFadeIn(()=>{\n                    this.annoucementText.text = text\n                    this.annoucementText.color = color\n                    setTimeout(()=>{this.announcementQueue.splice(0,1);this.updateAnnouncement();},time+animationDuration)\n                })\n                this.announcementQueue[0][3] = true\n            }\n            else if(this.announcementQueue.length >0) return\n            else if(!this.onAnnouncementPerpetual && this.annoucementText.display) return fadeOut()\n            else if(this.onAnnouncementPerpetual && ((!this.annoucementText.display) || this.onAnnoucementChanged)) return fadeOutThenFadeIn(()=>{\n                let [text,color] = this.announcmentPerpetual\n                this.annoucementText.text = text\n                this.annoucementText.color = color\n            })\n        }\n    }\n\n    changeAnnoucementPerpetual(text,color){\n        this.announcmentPerpetual = [text,color]\n        this.onAnnoucementChanged = true\n        this.updateAnnouncement()\n    }\n\n    addToAnnoucementQueue(text,color,time){\n        this.announcementQueue.push([text,color,time,false])\n        this.updateAnnouncement()\n    }\n\n    drawPossibleSettlement(position){\n        const [x,y] = this.findPositionOfIntersection(position)\n        const shape = this.structureElement.addShape({\n        kind:'poly',x,y,color:'white',points:[\n            [15,-10.5],[0,-25.5],[-15,-10.5],[-15,10.5],[15,10.5]\n        ],border:true,borderColor:'black',borderWidth:2,opacity:0.5,\n        })\n        return shape\n    }\n\n    selectRoadLocation(roads){\n        return new Promise(r=>{\n            const locations = roads.map(location=>{\n                const loc = this.drawPossibleRoad(location[0],location[1])\n                loc.pressedEvent(()=>{\n                    console.log('hello',r)\n                    r(location)\n                    locations.forEach(e=>e.kill())\n                })\n                return loc\n            })\n        })\n    }\n\n    drawPossibleRoad(topHead,bottomHead){\n        let [x1,y1] = this.findPositionOfIntersection(topHead)\n        let [x2,y2] = this.findPositionOfIntersection(bottomHead)\n        const angle1 = degToRad(findAngle2Point(x1,y1,x2,y2))\n        const angle2 = degToRad(findAngle2Point(x2,y2,x1,y1))\n        const changeDistance=7\n        x1+= Math.cos(angle1)*changeDistance\n        y1-= Math.sin(angle1)*changeDistance\n        x2+= Math.cos(angle2)*changeDistance\n        y2-= Math.sin(angle2)*changeDistance\n\n        const shape = this.roadElement.addShape({\n            kind:'line',\n            lineWidth:9,\n            points:[[x1,y1],[x2,y2]],\n            color:'white',\n            border:true,\n            borderWidth:3,\n            borderColor:'black'\n        })\n        return shape\n    }\n\n    createLeaderboardObject(model,initiateTrade=()=>{}){\n        const w = 300\n        const h = 320\n        this.leaderBoardObject = this.app.addObject({x:this.app.canvas.width - 300,y:370})\n        \n        const leaderBoardCanvas = document.createElement('canvas')\n        \n        const leaderBoardApp = new lght.app(leaderBoardCanvas,{constantRender:false,background:'pink'})\n        leaderBoardApp.backgroundColor = 'pink'\n        leaderBoardApp.canvas.width = w\n        leaderBoardApp.canvas.height = h\n        const obj = leaderBoardApp.addObject({x:leaderBoardCanvas.width/2,y:0})\n\n        const createShape = (y,color,textColor)=>{\n            obj.addShape({w,h:80,kind:'rect',y,color})\n            const usernameShape = obj.addShape({y:y-20,color:'black',font:'bold italic 25px Times News Roman',text:'',kind:'text'})\n            const infoShape = obj.addShape({y:y+10,color:'black',font:'20px Times News Roman',text:'',kind:'text'})\n            const specialNote = obj.addShape({y:y+28,font:'10px Times News Roman',color:'black',kind:'text',text:''})\n            return [usernameShape,infoShape,specialNote]\n        }\n        const [us1,is1,sn1] = createShape(40,'#00FFFF','black')\n        const [us2,is2,sn2] = createShape(120,'#EA3C53','black')\n        const [us3,is3,sn3] = createShape(200,'white','black')\n        const [us4,is4,sn4] = createShape(280,'#FF7F50','black')\n\n        this.usernameElements = [us1,us2,us3,us4]\n        this.infoElements = [is1,is2,is3,is4]\n        this.specialNoteElements = [sn1,sn2,sn3,sn4]\n\n        this.updateLeaderBoard = ()=>{\n            let {usernames,resourcePlayers,devCardPlayers,vpPlayers,longestRoadPlayer,largestArmyPlayer} = model\n            this.specialNoteElements.forEach(e=>e.text = '')\n            usernames.forEach((u,i)=>{\n                if(this.usernameElements[i].text !== u) this.usernameElements[i].text = u\n                this.infoElements[i].text = `${vpPlayers[i]}🌟 ${resourcePlayers[i]}💲 ${devCardPlayers[i]} Development Cards`\n                if(longestRoadPlayer === i && largestArmyPlayer === i) this.specialNoteElements[i].text = 'Longest Road and Largest Army'\n                else if(longestRoadPlayer === i) this.specialNoteElements[i].text = 'Longest Road'\n                else if(largestArmyPlayer === i) this.specialNoteElements[i].text = 'Largest Army'\n            })\n            obj.updateVisual()\n            leaderBoardApp.turnFunctions(leaderBoardApp)\n            this.leaderBoardObject.updateVisual()\n        }\n        this.updateLeaderBoard()\n\n\n        //Color data #003aa7 blue #ce2b10 red #e19500 orange\n        const rectangle = this.leaderBoardObject.addShape({kind:'roundedRectangle',w,h,borderRadius:20,color:'white',clip:true,clipCanvas:leaderBoardApp.canvas,border:true,borderWidth:5,borderColor:'black',shadow:{blur:7,offsetX:4,color:'black'}})\n        \n        const turnIndicator = this.leaderBoardObject.addShape({kind:'poly',specialPolygon:true,radius:20,numberOfSide:3,rotation:180,color:'#ffffa1',x:w/2 + 40, y:-h/2+40})\n        \n        const tradeIndicatorObject = this.app.addObject({x:this.app.canvas.width - 300,y:370,display:false,opacity:0})\n        tradeIndicatorObject.addShape({kind:'roundedRectangle',w:w+20,h:100,borderRadius:10,borderColor:'black',border:true,color:'white'})\n        tradeIndicatorObject.addShape({kind:'text',font:'25px Times News Roman',text:'Click to initiate trade'})\n        this.leaderBoardObject.hoverEvent(()=>{\n        tradeIndicatorObject.display = true\n        tradeIndicatorObject.addAnimation('opacity',1,500)\n        },()=>{\n        tradeIndicatorObject.addAnimation('opacity',0,500,()=>tradeIndicatorObject.display = false)\n        })\n        this.leaderBoardObject.pressedEvent(()=>initiateTrade())\n\n        let loop = 0\n        const fadeIn = ()=>{\n            loop --\n            if(loop)turnIndicator.addAnimation('opacity',1,500,fadeOut)\n            else turnIndicator.addAnimation('opacity',1,500)\n        }\n        const fadeOut = ()=>{\n            turnIndicator.addAnimation('opacity',0,500,fadeIn)\n        }\n\n        const hRect = h/4\n        const turnOriginal = -h/2+40\n\n        this.updateTurn = (turn)=>{\n            turnIndicator.addAnimation('y',turnOriginal+turn*hRect,1000,()=>{\n                loop = 5\n                fadeIn()\n            })\n        }\n        this.leaderBoardObject.updateVisual()\n    }\n\n    createActionObject(){\n        this.actionObject = this.app.addObject({\n            y:this.app.canvas.height/2 +130,\n            x:this.app.canvas.width - 300,\n            display:false\n        })\n        this.actionObject.addShape({kind:'roundedRectangle',w:320,h:400,borderRadius:20,color:'white',border:true,borderColor:'black',borderWidth:5,shadow:{blur:4,offsetX:4,color:'black'}})\n        this.actionObject.addShape({kind:'text',y:-150,font:'35px Times News Roman',text:'Take Action:',color:'black'})\n        const addActionObject = (y,text)=>{\n            const line = this.actionObject.addShape({kind:'line',y,color:'yellow',lineWidth:40,points:[[-150,0],[-150,0]],display:false})\n            const textElement = this.actionObject.addShape({kind:'text',y,font:'30px Times News Roman',text,color:'gray',display:false})\n            textElement.hoverEvent(\n                ()=>{\n                    line.display = true\n                    line.addAnimation('points.1.0',150,500)\n                },\n                ()=>{\n                    line.addAnimation('points.1.0',-150,500,()=>{\n                    line.display = false\n                })\n                }\n            )\n            textElement.line = line\n            return textElement\n        }\n        let actionReference = ['road','settlement','city','trade','turn','dice']\n        let actionDisplayReference = ['Build Road 🛣️','Build Settlement 🏠','Build City 🏙️','Initiate Trade 🤝','Pass turn ➡️','Roll Dice 🎲']\n        let textObjects = [\n            addActionObject(-90,''),\n            addActionObject(-40,''),\n            addActionObject(10,''),\n            addActionObject(60,''),\n            addActionObject(110,''),\n            addActionObject(160,''),\n        ]\n        textObjects.forEach((e,id)=>{\n            e.pressedEvent(()=>this.actionFunctions[id]())\n        })\n        this.currentActions = []\n        this.actionFunctions = []\n        this.updateActionObjects = ()=>{\n            if(textObjects.length === 0) return this.actionObject.display = false\n            this.actionObject.display = true\n            textObjects.forEach((e,i)=>{\n                if(this.currentActions[i]){\n                    e.display = true\n                    e.text = actionDisplayReference[actionReference.indexOf(this.currentActions[i])]\n                }\n                else e.display = false\n                e.line.points = [[-150,0],[-150,0]]\n            })\n            this.actionObject.updateVisual()\n        }\n    }\n\n    changePlayerResourceCount({wheatAmount,rockAmount,sheepAmount,brickAmount,woodAmount}){\n        let changeResource = (object,number,num)=>{\n            number.text=num\n            object.updateVisual()\n        }\n        if(wheatAmount !== undefined) changeResource(...this.wheatCard,wheatAmount)\n        if(rockAmount !== undefined) changeResource(...this.rockCard,rockAmount)\n        if(sheepAmount !== undefined) changeResource(...this.sheepCard,sheepAmount)\n        if(brickAmount !== undefined) changeResource(...this.brickCard,brickAmount)\n        if(woodAmount !== undefined) changeResource(...this.woodCard,woodAmount)\n    }\n\n    createPlayerDeck(){\n        this.playerUI = this.app.addObject({x:this.app.canvas.width/2,y:this.app.canvas.height-(100)})\n        this.playerDeck = this.playerUI.addShape({w:this.app.canvas.width,h:250,color:'brown',kind:'rect'})\n        this.wheatCard = this.addCard(200,'assets/wheatResource.png',-1)\n        this.rockCard = this.addCard(300,'assets/rockResource.png',-1)\n        this.sheepCard = this.addCard(400,'assets/sheepResource.png',-1)\n        this.brickCard = this.addCard(500,'assets/brickResource.png',-1)\n        this.woodCard = this.addCard(600,'assets/woodResource.png',-1)\n    }\n\n    addRobber(x,y){\n        this.robberElement.x = this.robberElement.x + x\n        this.robberElement.y = this.robberElement.y + y\n        return this.robberElement.addShape({kind:'img',spriteLink:\"assets/robber.png\",y:-20,drawWidth:40})\n    }\n\n    addLayer(num){\n        const arr = []\n        if(!num) return this.app.addObject({x:this.app.canvas.width/2 - 270,y:this.app.canvas.height/2 - 50})\n        else{\n        for(let i = 0;i<num;i++){\n            arr.push(this.app.addObject({x:this.app.canvas.width/2 + 200,y:this.app.canvas.height/2 - 50}))\n            return arr\n        }\n        }\n    }\n\n    createDevDeck(){\n        const createDevLayer = ()=>{\n        const layer = this.addLayer()\n        layer.x += 500\n        layer.y -= 250\n        return layer\n        }\n\n        this.devDeck = createDevLayer()\n        this.devDeck.addShape({kind:'roundedRectangle',x:4,h:200,w:137.84,color:'white',borderRadius:15,border:true,borderColor:'black',borderWidth:5,shadow:{blur:4,color:'black',offsetX:3}})\n        this.devDeck.addShape({kind:'roundedRectangle',h:200,w:137.84,clip:true,clipImageLink:'assets/developmentCardBack.png',color:'white',borderRadius:15,border:true,borderColor:'black',borderWidth:5})\n        \n        this.popUpDevDeckRectangle = createDevLayer()\n        this.popUpDevDeckRectangle.opacity = 0\n        this.popUpDevDeckRectangle.display = false\n\n        this.popUpDevDeckRectangle.addShape({kind:'roundedRectangle',h:100,w:160,color:'white',borderRadius:10,border:true,borderWidth:5,borderColor:'black'})\n        this.popUpDevDeckRectangle.addShape({kind:'text',font:'16px Times New Roman',text:'Buy Development Card',y:-30})\n        this.popUpDevDeckRectangle.addShape({kind:'text',font:'35px Times New Roman',text:'🐑 ⛰️ 🌾'})\n        this.popUpDevDeckRectangle.addShape({kind:'text',font:'20px Times New Roman',text:'5 left',y:30})\n\n        this.devDeck.hoverEvent(()=>{\n            this.popUpDevDeckRectangle.display = true\n            this.popUpDevDeckRectangle.addAnimation(\"opacity\",1,500)\n        },()=>{\n            this.popUpDevDeckRectangle.addAnimation(\"opacity\",0,500,()=>{\n            this.popUpDevDeckRectangle.display = false\n            })\n        })\n\n        this.animateDevCard = this.devDeck.addShape({kind:'roundedRectangle',h:200,w:137.84,clip:true,clipImageLink:'assets/developmentCardBack.png',color:'white',borderRadius:15,border:true,borderColor:'black',borderWidth:5,display:false})\n    }\n\n    createDevDeckPlayer(model,delegate){\n        const developmentCardReference = ['Monopoly','Knight','Road','Point','Plenty']\n        const imageReference = ['assets/monopolyCard.png','assets/knightCard.png','assets/roadCard.png','assets/libraryCard.png','assets/yearOfPlentyCard.png']\n        const cardElements = imageReference.map((link,id)=>{\n            let card = this.addCard(0,link) //[card,number]\n            card[0].display = false\n            card[0].pressedEvent(()=>delegate[developmentCardReference[id]]())\n            return card\n        })\n        this.playerUI.updateVisual()\n        let spacing = 150\n        let leftMargin = 100\n        let xs = []\n        for(let i = 0;i<imageReference.length;i++){\n            console.log(cardElements[0][0])\n            xs.push(this.app.canvas.width - leftMargin - 0.5*cardElements[0][0].shapes[0].width - spacing*i)\n        }\n        let currentCardPosition = []\n        let oldModel = {...model.myDevCards}\n\n        this.updateToModel = ()=>{\n            //3 scenario, just changing the number, adding a new kind of card, and \n            //removing a card\n            let cards = model.myDevCards\n            for(let property in oldModel){\n                if(!cards[property]){\n                    let card = cardElements[developmentCardReference.indexOf(property)]\n                    card[0].display = false\n                    currentCardPosition.splice(currentCardPosition.indexOf(property),1)\n                    currentCardPosition.forEach((e,i)=>{\n                        let card = cardElements[developmentCardReference.indexOf(e)]\n                        let x= xs[i]\n                        card[0].addAnimation('x',x,1000)\n                    })\n                }\n                else if(cards[property] !== oldModel[property]){\n                    console.log(property)\n                    cardElements[developmentCardReference.indexOf(property)][1].text = cards[property]\n                    cardElements[developmentCardReference.indexOf(property)][0].updateVisual()\n                }\n\n            }\n            console.log('done1')\n            for(let property in cards){\n                if(!oldModel[property] && cards[property]){\n                    let index = currentCardPosition.length\n                    currentCardPosition.push(property)\n                    let card = cardElements[developmentCardReference.indexOf(property)]\n                    console.log(card)\n                    card[0].display = true\n                    card[0].zIndex = index\n                    card[0].y = this.app.canvas.height + 200\n                    card[0].x = xs[index]\n                    card[1].text = cards[property]\n                    console.log(index,xs)\n                    card[0].addAnimation('y',this.app.canvas.height-70,500)\n                }\n            }\n            console.log('done2')\n            this.playerUI.updateVisual()\n            oldModel = {...model.myDevCards}\n        }\n        \n    }  \n\n    inititiateArray(...args){\n        [...args].forEach(name=>this[name] = [])\n    }\n\n    createBoard(){\n\n        this.backgroundPoly = this.background.addShape({\n            kind:'poly',\n            radius:460,\n            numberOfSide:6,\n            specialPolygon:true,\n            color:'#006994',\n            clip:true,\n            clipImageLink:'assets/background.png',\n        })\n\n        const clipImageLinks = [\"assets/rockTile.png\",\"assets/desertTile.png\",\"assets/woodTile.png\",\"assets/wheatTile.png\",\"assets/sheepTile.png\",\"assets/brickTile.png\"]\n        const imageResourceReference = ['Rock','Desert','Wood','Wheat','Sheep','Brick']\n        //Adding the tile, the number, and the dots\n        const repeatedlyAddByPositionMatrix = (array,func)=>this.positionMatrix.forEach((row,posY)=>{\n        if(Array.isArray(array)) array.forEach(arr=>this[arr].push([]))\n        else this[array].push([])\n        row.forEach(([x,y],posX)=>{\n            const elements = func(x,y,posY,posX)\n            if(!elements) return\n            if(Array.isArray(elements)) elements.forEach((e,index)=>this[array[index]][posY].push = (e))\n            else this[array][posY].push(elements)\n        })\n        })\n\n        repeatedlyAddByPositionMatrix('hexMap',(x,y,posY,posX)=>{\n            const image = clipImageLinks[imageResourceReference.indexOf(this.resourceBoard[posY+1][posX+1])]\n            return this.resourceElement.addShape({...this.hexProperty,x:x,y:y,clip:true,clipImageLink:image})\n        })\n\n        let checkPositionFactory = (func)=>(x,y,posY,posX)=>(this.numberBoard[posY+1][posX+1])?func(x,y,posY,posX):null\n\n        repeatedlyAddByPositionMatrix('buttonMap',checkPositionFactory((x,y)=>this.resourceElement.addShape({x,y,kind:'arc',rad:30,color:'#e8d79b'})))\n        repeatedlyAddByPositionMatrix(['numberMap','dotMap'],checkPositionFactory((x,y,posY,posX)=>this.addNumberTokenToPositionWithNumber(this.numberBoard[posY+1][posX+1],[x,y])))\n\n        //Adding the ports\n        const positionReference = [[70, -364],[-212, -356],[-350, -130],[-360, 118],[-208, 356],[70, 350],[272, 230],[402, -24],[262, -256]]\n        const tradeImageReference = [\"assets/rockTrade.png\",\"assets/wheatTrade.png\",\"assets/randomTrade.png\",'assets/woodTrade.png','assets/brickTrade.png','assets/sheepTrade.png']\n        const tradeResourceReference = ['Rock trade', 'Wheat trade','Random trade','Wood trade','Brick trade','Sheep trade']\n        const boardPosReference = [[0,2],[0,0],[2,0],[4,0],[6,0],[6,2],[5,4],[3,6],[1,4]]\n        positionReference.forEach(([x,y],index)=>{\n            let [py,px] = boardPosReference[index]\n            let trade = this.resourceBoard[py][px]\n            const port = this.portElement.addShape({kind:'img',spriteLink:tradeImageReference[tradeResourceReference.indexOf(trade)],x,y,drawWidth:65})\n            port.hoverEvent(()=>port.addAnimation('drawWidth',130,600)\n            ,()=>port.addAnimation('drawWidth',65,600))\n            this.portMap.push(port)\n        })\n\n    }\n\n    getPositionMatrix(){\n        const hex = this.resourceElement.addShape({...this.hexProperty,display:false})\n        const hexWidth = hex.width-2\n        const hexHeight = hex.height-2\n        const sideLength = hex.sideLength\n        //the width have to be exactly 60\n\n        let y = 0\n        const fiveRow = [[-2*hexWidth,0],[-hexWidth,0],[0,0],[hexWidth,0],[2*hexWidth,0]]\n        y = 0.5*hexHeight + 0.5*sideLength\n        const fourRowDown = [[-1.5*hexWidth,y],[-hexWidth/2,y],[0.5*hexWidth,y],[1.5*hexWidth,y]]\n        const threeRowDown = [[-hexWidth,2*y],[0,2*y],[hexWidth,2*y]]\n        y = -y\n        const fourRowUp = [[-1.5*hexWidth,y],[-hexWidth/2,y],[0.5*hexWidth,y],[1.5*hexWidth,y]]\n        const threeRowUp = [[-hexWidth,2*y],[0,2*y],[hexWidth,2*y]]\n        this.positionMatrix = [threeRowUp,fourRowUp,fiveRow,fourRowDown,threeRowDown]\n\n        hex.kill()\n    }\n\n    addCard(x,clipImage,leftOrRight=1){\n        const cardHeight = 350;\n        const cardWidth = 249.2\n        const cardProps = {\n        kind:'roundedRectangle',\n        h:cardHeight,w:cardWidth,borderRadius:10,\n        borderColor:'yellow',borderWidth:10,\n        }\n        const numberCircleProps = {\n        kind:'arc',\n        rad:30, y:-cardHeight/2,x:leftOrRight*cardWidth/2,color:'black',\n        opacity:0.4\n        }\n        const numberProp = {\n        kind:'text',\n        y:-cardHeight/2-5,x:leftOrRight*cardWidth/2,color:'white',\n        font:'40px Times News Roman',\n        text:0\n        }\n\n        const card1 = this.app.addObject({x,y:this.app.canvas.height-70})\n        const card = card1.addShape({...cardProps,clip:true,clipImageLink:clipImage})\n        const circle = card1.addShape({...numberCircleProps})\n        const number = card1.addShape({...numberProp})\n        \n        card1.hoverEvent(()=>{\n        card1.addAnimation('y',this.app.canvas.height-200,500)\n        card.border = true\n        circle.addAnimation('opacity',0,500)\n        number.addAnimation('opacity',0,500)\n        },()=>{\n        card1.addAnimation('y',this.app.canvas.height-70,500)\n        circle.addAnimation('opacity',1,500)\n        number.addAnimation('opacity',1,500)\n        card.border = false\n        })\n        return [card1,number]\n    }\n\n    createDiceDeck(){\n        const diceProps = {kind:'roundedRectangle',w:75,h:75,borderRadius:15,borde:true,borderWidth:5,borderColor:'black'}\n        this.dicePlate = this.diceElement.addShape({kind:'roundedRectangle',w:350,h:150,borderRadius:40,color:'#e20000',border:true,borderWidth:10,borderColor:'black'})\n        this.redDice = this.diceElement.addShape({...diceProps,color:'red',x:50})\n        this.yellowDice = this.diceElement.addShape({...diceProps,color:'yellow',x:-50})\n        this.diceElement.display = false\n\n        const diceNumReference = [[1,1],[2,1],[1,3],[3,2],[3,3],[5,2],[5,3],[6,3],[5,5],[6,5],[6,6]]\n        this.rollDiceAnimation = (number)=>{\n            return new Promise(r=>{\n                const [pip1,pip2] = diceNumReference[number-2]\n                const numberOfQuickLoop = 20\n                const timeBetweenLoop = 70\n                this.diceElement.display = true\n                let loopleft = numberOfQuickLoop\n\n                const loopManage = ()=>{\n                    loopleft--\n                    if(loopleft>0){\n                        this.showDiceNumber(random(1,6),random(1,6))\n                        setTimeout(loopManage,timeBetweenLoop)\n                    }\n                    else{\n                        this.showDiceNumber(pip1,pip2)\n                        setTimeout(()=>{\n                            this.diceElement.display = false\n                            r()\n                        },2000)\n                    }\n                }\n\n                setTimeout(loopManage,timeBetweenLoop)\n            })\n        }\n    }\n\n    showDiceNumber(dice1,dice2){\n        const renderNumber = (dice,number,pipColor)=>{\n            if(dice.pips){\n                dice.pips.forEach(pip=>pip.kill())\n            }\n            dice.pips = []\n            const distance = 20\n            const positionReference = [[[0,0]],[[-distance,distance],[distance,-distance]],[[-distance,distance],[0,0],[distance,-distance]],[[-distance,distance],[distance,-distance],[-distance,-distance],[distance,distance]],[[-distance,distance],[distance,-distance],[-distance,-distance],[distance,distance],[0,0]],[[-distance,distance],[distance,-distance],[-distance,-distance],[distance,distance],[distance,0],[-distance,0]]]\n            const position = positionReference[number-1]\n            position.forEach(([x,y])=>{\n                const pip = this.diceElement.addShape({kind:'arc',color:pipColor,rad:8,x:dice.x+x,y:dice.y+y})\n                dice.pips.push(pip)\n            })\n        }\n        renderNumber(this.redDice,dice1,'yellow')\n        renderNumber(this.yellowDice,dice2,'red')\n    }\n\n    addNumberTokenToPositionWithNumber(number,[x,y]){\n        const numberReference = [2,3,4,5,6,7,8,9,10,11,12]\n        const dotReference = [1,2,3,4,5,6,5,4,3,2,1]\n        const dots = []\n        const num = this.resourceElement.addShape({x,y:y-10,kind:'text',text:`${number}`,color:(number===6||number===8)?'red':'black',font:'36px Times New Roman'})\n        \n        const numberOfDot = dotReference[numberReference.indexOf(number)]\n        const spaceBetweenDot = 5\n        const startingPosition = x - ((numberOfDot*spaceBetweenDot/2))+1.5\n        for(let i = 0;i<numberOfDot;i++){\n            dots.push(this.resourceElement.addShape({y:y+14,x:startingPosition+spaceBetweenDot*i,kind:'arc',rad:2,color:(number===6||number===8)?'red':'black'}))\n        }\n        return [num,dots]\n    }\n\n    activateCitySelection(){\n        return new Promise(r=>this.cityResolveFunction = r)\n    }\n\n    buildSettlement(position,color=this.currentColorCode){\n        const [x,y] = this.findPositionOfIntersection(position)\n        const shape = this.structureElement.addShape({\n        kind:'poly',x,y,color,points:[\n            [10,-7],[0,-17],[-10,-7],[-10,7],[10,7]\n        ],border:true,borderColor:'black',borderWidth:6,\n        shadow:{\n        blur:2,\n        offsetX:1,\n        color:'black'\n        }})\n        this.settlements.push(shape)\n        this.structures.push(shape)\n        shape.pressedEvent(()=>{\n            if(this.cityResolveFunction){\n                this.cityResolveFunction(position)\n                this.cityResolveFunction = null\n            }\n        })\n        return shape\n    }\n\n    buildCity(position,color=this.currentColorCode){\n        const [x,y] = this.findPositionOfIntersection(position)\n        const oldSettlement = this.structures.find((structure)=>Math.round(structure.x)===Math.round(x)&&Math.round(structure.y)===Math.round(y))\n        console.log(oldSettlement)\n        oldSettlement.kill()\n        this.structures = this.structures.filter((structure)=>Math.round(structure.x)!==Math.round(x)&&Math.round(structure.y)!==Math.round(y))\n        this.settlements = this.settlements.filter((structure)=>Math.round(structure.x)!==Math.round(x)&&Math.round(structure.y)!==Math.round(y))\n\n        const shape = this.structureElement.addShape({\n        kind:'poly',x,y,color,points:[\n            [8,-7],[0,-17],[-8,-7],[-8,17],[25,17],[25,2],[8,2]\n        ],border:true,borderColor:'black',borderWidth:6,\n        shadow:{\n        blur:2,\n        offsetX:1,\n        color:'black'\n        }})\n        this.settlements.push(shape)\n        this.cities.push(shape)\n        return shape\n    }\n\n    buildRoad(topHead,bottomHead,color=this.currentColorCode){\n        let [x1,y1] = this.findPositionOfIntersection(topHead)\n        let [x2,y2] = this.findPositionOfIntersection(bottomHead)\n        const angle1 = degToRad(findAngle2Point(x1,y1,x2,y2))\n        const angle2 = degToRad(findAngle2Point(x2,y2,x1,y1))\n        const changeDistance=7\n        x1+= Math.cos(angle1)*changeDistance\n        y1-= Math.sin(angle1)*changeDistance\n        x2+= Math.cos(angle2)*changeDistance\n        y2-= Math.sin(angle2)*changeDistance\n\n        const shape = this.roadElement.addShape({\n        kind:'line',\n        lineWidth:6,\n        points:[[x1,y1],[x2,y2]],\n        color,\n        border:true,\n        borderWidth:3,\n        borderColor:'black'\n        ,shadow:{\n            blur:7,color:'black',offsetX:3,\n        }})\n        this.roads.push(shape)\n        return shape\n    }\n\n    findPositionOfIntersection(position){\n        const translatedPosition = this.translateToViewCoordinate(...position.flat())\n        const [y1,x1,y2,x2,y3,x3] = translatedPosition\n        let oddsOneOut,differentCoefficient\n        if(y1===y2){\n        oddsOneOut = [y3,x3]\n        differentCoefficient = y3-y2\n        }\n        else if(y1===y3){\n        oddsOneOut = [y2,x2]\n        differentCoefficient = y2-y1\n        }\n        else{\n        oddsOneOut = [y1,x1]\n        differentCoefficient = y1-y2\n        }\n\n        const [oddY,oddX] = oddsOneOut\n        if(oddY < 0 || oddY >= this.hexMap.length || oddX<0 || oddX>=this.hexMap[oddY].length){\n            const tileRow = [[y1,x1],[y2,x2],[y3,x3]].filter(([y,x])=>!(y===oddY&&x===oddX)).sort(([y1,x1],[y2,x2])=>x1-x2)\n            const leftMostHex = this.hexMap[tileRow[0][0]][tileRow[0][1]]\n            const rightMostHex = this.hexMap[tileRow[1][0]][tileRow[1][1]]\n            const [vx,vy] = (leftMostHex)?(leftMostHex.findVertex()[(differentCoefficient>0)?4:5]):(rightMostHex.findVertex()[(differentCoefficient>0?2:1)])\n            return this.resourceElement.findThePositionThatIsRelativeToThisObjectFromAbsolutePosition(vx,vy)\n        }\n\n        const oddsHex = this.hexMap[oddY][oddX]\n        return this.resourceElement.findThePositionThatIsRelativeToThisObjectFromAbsolutePosition(...oddsHex.findVertex()[(differentCoefficient>0)?0:3])\n    }\n\n    translateToViewCoordinate(){\n        const result = []\n        for (const pos of arguments) {\n        result.push(pos-1)\n        }\n        return result\n    }\n\n    doThisActionOnAllHex(func){\n        this.hexMap.forEach((row,y)=>row.forEach((b,x)=>func(b,x,y)))\n    }\n\n    doThisActionOnAllButton(func){\n        this.buttonMap.forEach((row,y)=>row.forEach((b,x)=>func(b,x,y)))\n    }\n\n    doThisActionOnAllNumber (func) {\n        this.numberMap.forEach((row,y)=>row.forEach((b,x)=>func(b,x,y)))\n    }\n    }\n\nexport default View","import _ from 'lodash'\nconst compareDoubleArray = ([x1,y1],[x2,y2])=>x1===x2 && y1===y2\n\nconst comparePositions = (p1,p2)=>{\n    let position1 = [...p1]\n    let position2 = [...p2]\n    for(let p of position2){\n        let found = false\n        for(let i = 0;i<position1.length;i++){\n            if(compareDoubleArray(position1[i],p)){\n                found = true\n                position1.splice(i,1)\n                break\n            }\n        }\n        if(!found) return false\n    }\n    return true\n}\nconst isThereThisPositionInThisArray = (position,array)=>{\n    for(let p of array){\n        if(comparePositions(position,p)) return true\n    }\n    return false\n}\n\nclass Model{\n    constructor(){\n        this.allGridLocation = [\n            [0,0,1,0,1,1],[0,0,1,1,0,1],[0,1,1,1,1,2],[0,1,1,2,0,2],[0,2,1,2,1,3],[0,2,0,3,1,3],[0,3,1,3,1,4],\n            [1,0,2,0,2,1],[1,0,2,1,1,1],[1,1,2,1,2,2],[1,1,2,2,1,2],[1,2,2,3,1,3],[1,2,2,2,2,3],[1,3,2,3,2,4],[1,3,1,4,2,4],[1,4,2,4,2,5],\n            [2,0,3,0,3,1],[2,0,3,1,2,1],[2,1,3,1,3,2],[2,1,2,2,3,2],[2,2,3,2,3,3],[2,2,3,3,2,3],[2,3,3,3,3,4],[2,3,3,4,2,4],[2,4,3,4,3,5],[2,4,2,5,3,5],[2,5,3,5,3,6],\n            [3,0,4,0,3,1],[3,1,4,0,4,1],[3,1,4,1,3,2],[3,2,4,2,3,3],[3,2,4,1,4,2],[3,3,4,2,4,3],[3,3,3,4,4,3],[3,4,4,3,4,4],[3,4,3,5,4,4],[3,5,4,4,4,5],[3,5,3,6,4,5],\n            [4,0,5,0,4,1],[4,1,5,0,5,1],[4,1,4,2,5,1],[4,2,5,1,5,2],[4,2,5,2,4,3],[4,3,5,2,5,3],[4,3,4,4,5,3],[4,4,5,3,5,4],[4,4,4,5,5,4],\n            [5,0,5,1,6,0],[5,1,6,0,6,1],[5,1,5,2,6,1],[5,2,6,1,6,2],[5,2,6,2,5,3],[5,3,6,2,6,3],[5,3,5,4,6,3]\n        ].map(e=>_.chunk(e,2))\n    }\n\n    loadData({grid,playerUsernames}){\n        this.grid = grid\n        this.usernames = playerUsernames\n        this.vpPlayers = this.usernames.map(e=>0)\n        this.resourcePlayers = this.usernames.map(e=>0)\n        this.devCardPlayers = this.usernames.map(e=>0)\n        this.settlements = this.usernames.map(e=>[])\n        this.cities = this.usernames.map(e=>[])\n        this.roads = this.usernames.map(e=>[])\n        this.myDevCards = {}\n        this.wheatAmount = 0\n        this.sheepAmount = 0\n        this.rockAmount = 0\n        this.brickAmount = 0\n        this.woodAmount = 0\n        this.tradingPriveleges = {}\n        this.playerid = playerUsernames.length-1\n        this.longestRoadPlayer = -1\n        this.largestArmyPlayer = -1\n    }\n\n    updateLeaderBoard(){\n        let totalDevCard = 0\n        for(let card in this.myDevCards) totalDevCard += this.myDevCards[card]\n        this.devCardPlayers[this.playerid] = totalDevCard\n        let totalResource = this.wheatAmount + this.sheepAmount + this.rockAmount+this.woodAmount+this.brickAmount\n        this.resourcePlayers[this.playerid] = totalResource\n        this.vpPlayers = this.vpPlayers.map((e,i)=>{\n            let point = this.settlements[i].length + this.cities[i].length*2\n            if(this.longestRoadPlayer === i) point += 2\n            if(this.largestArmyPlayer === i) point += 2\n            return point\n        })\n    }\n\n    get canBuildCity(){\n        if(this.rockAmount<3 && this.wheatAmount<2) return false\n        if(this.selfSettlement.length === 0) return false\n        if(this.selfCity.length === 4) return false\n        return true\n    }\n\n    get canBuildSettlement(){\n        if(!(this.wheatAmount && this.sheepAmount && this.woodAmount && this.brickAmount)) return false\n        if(this.selfSettlement.length >= 5) return false\n        if(this.possibleSettlements.length === 0) return false\n        return true\n    }\n\n    get canBuildRoad(){\n        if(!(this.brickAmount && this.woodAmount)) return false\n        if(this.selfRoad.length >= 14) return false\n        if(this.possibleRoads.length === 0) return false\n        return true\n    }\n\n    get possibleActions(){\n        const result = []\n        if(this.canBuildCity) result.push('city')\n        if(this.canBuildSettlement) result.push('settlement')\n        if(this.canBuildRoad) result.push('road')\n        return result\n    }\n\n    newPlayer({username}){\n        this.usernames.push(username)\n        this.vpPlayers.push(0)\n        this.resourcePlayers.push(0)\n        this.devCardPlayers.push(0)\n        this.settlements.push([])\n        this.cities.push([])\n        this.roads.push([])\n        \n    }\n\n    findAdjacentPositionsTo(position){\n        //The idea behind this function is this:\n        //What ever the intersection is, it is always in the shape of either a MickeyMouse face or a spaceship\n        //The idea behind this function is this: find the surrounding tile to make it a bigger MickeyMouse face/spaceship\n        //To do that, we find the odds on out and the tile row. Odds one out has a different y value then the 2 on the tile row\n        //After than, add 1 and decrease 1 to the odds one out to find the other 2 tiles\n        //Finally, use the tile row to find the tile bordering both of them. Note that we have to adjust the length to fit the different length of the \n        //rows\n        const inBound = ([y,x])=>(y<this.grid.resourceBoard.length && y>=0 && x>=0 && x<this.grid.resourceBoard[y].length)\n\n        const [[firstY],[secondY],[thirdY]] = position\n        const oddsOneOut = (firstY === secondY) ? position[2] : ((secondY===thirdY)? position[0]:position[1])\n        const tileRow = position.filter(tile=>tile!==oddsOneOut)\n        tileRow.sort(([y1,x1],[y2,x2])=>x1-x2)\n        const positionTypeCoefficient = oddsOneOut[0] - tileRow[0][0] \n        const [oddsY,oddsX] = oddsOneOut\n        const leftOddsBorderTile = [oddsY,oddsX - 1]\n        const rightOddsBorderTile = [oddsY,oddsX + 1]\n        const result = []\n        if(inBound(leftOddsBorderTile)) result.push([oddsOneOut,tileRow[0],leftOddsBorderTile])\n        if(inBound(rightOddsBorderTile)) result.push([oddsOneOut,tileRow[1],rightOddsBorderTile])\n\n        const yOfTileRowBorderTile = tileRow[0][0] - positionTypeCoefficient\n        if(yOfTileRowBorderTile >= 0 && yOfTileRowBorderTile < this.grid.resourceBoard.length){\n            const differenceInLength = this.grid.resourceBoard[tileRow[0][0]].length -  this.grid.resourceBoard[yOfTileRowBorderTile].length\n            const tileRowBorderTile = [yOfTileRowBorderTile,tileRow[0][1] + ((differenceInLength < 0)?1:0)]\n            if(inBound(tileRowBorderTile)) result.push([tileRowBorderTile,...tileRow])\n        }\n        \n        return result\n    }\n\n    compareRoad([topHead1,bottomHead1],[topHead2,bottomHead2]){\n        return (comparePositions(topHead1,topHead2) && comparePositions(bottomHead1,bottomHead2))||(comparePositions(topHead1,bottomHead2) && comparePositions(bottomHead1,topHead2))\n    }\n\n    doesThisRoadAlreadyExist(road){\n        for(let s of this.roads){\n            for(let r of s){\n                if(this.compareRoad(road,r)) return true\n            }\n        }\n        return false\n    }\n\n    buyDevCard(card){\n        this.myDevCards[card] = (this.myDevCards[card])?this.myDevCards[card]+1:1\n    }\n\n    get possibleRoads(){\n        const result = []\n        const alreadyChecked = []\n        const notAlreadyChecked = head =>{\n            for(let h of alreadyChecked){\n                if(comparePositions(h,head)) return false\n            }\n            return true\n        }\n\n        this.selfRoad.forEach(([topHead,bottomHead])=>{\n            if(notAlreadyChecked(topHead)){\n                const adjacent = this.findAdjacentPositionsTo(topHead)\n                adjacent.forEach(position=>{\n                    if(!this.doesThisRoadAlreadyExist([topHead,position])) result.push([topHead,position])\n                })\n                alreadyChecked.push(topHead)\n            }\n            if(notAlreadyChecked(bottomHead)){\n                const adjacent = this.findAdjacentPositionsTo(bottomHead)\n                adjacent.forEach(position=>{\n                    if(!this.doesThisRoadAlreadyExist([bottomHead,position])) result.push([bottomHead,position])\n                })\n                alreadyChecked.push(bottomHead)\n            }\n        })\n        return result\n    }\n\n    validPlaceToBuildAStructure(position){\n        let adjacents = this.findAdjacentPositionsTo(position)\n        for(let s of this.settlements){\n            if(isThereThisPositionInThisArray(position,s)) return false\n            for(let position of adjacents){\n                if(isThereThisPositionInThisArray(position,s)) return false\n            }\n        }\n        for(let s of this.cities){\n            if(isThereThisPositionInThisArray(position,s)) return false\n            for(let position of adjacents){\n                if(isThereThisPositionInThisArray(position,s)) return false\n            }\n        }\n        return true\n    }\n\n    get possibleSettlementsInitial(){\n        console.log(this.allGridLocation)\n        return this.allGridLocation.filter((e)=>this.validPlaceToBuildAStructure(e))\n    }\n\n    get possibleSettlements(){\n        const heads = [...this.selfRoad].flat(1)\n        //Removing extraneous heads\n        const headsFiltered = []\n        for(let h of heads){\n            if(!headsFiltered.includes(h)) headsFiltered.push(h)\n        }\n        return headsFiltered.filter((e)=>this.validPlaceToBuildAStructure(e))\n    }\n\n    possibleRoadsInitial(settlement){\n        const adjacents =  this.findAdjacentPositionsTo(settlement)\n        const result = []\n        adjacents.forEach(head=>{if(!this.doesThisRoadAlreadyExist([settlement,head])) result.push([settlement,head])})\n        return result\n    }\n\n    get selfSettlement(){\n        return this.settlements[this.playerid]\n    }\n\n    get selfRoad(){\n        return this.roads[this.playerid]\n    }\n\n    get selfCity(){\n        return this.cities[this.playerid]\n    }\n\n    get selfUsername(){\n        return this.usernames[this.playerid]\n    }\n\n    selfBuildRoad(road){\n        this.selfRoad.push(road)\n    }\n\n    buildRoad(road,id){\n        this.roads[id].push(road)\n    }\n\n    selfBuildSettlement(settlement){\n        settlement.forEach(([y,x])=>{\n            switch(this.grid.resourceBoard[y][x]){\n                case 'Random trade':\n                    this.tradingPriveleges.randomTrade = true\n                    break\n                case 'Wood trade':\n                    this.tradingPriveleges.woodTrade = true\n                    break\n                case 'Sheep trade':\n                    this.tradingPriveleges.sheepTrade = true\n                    break\n                case 'Brick trade':\n                    this.tradingPriveleges.brickTrade = true\n                    break\n                case 'Rock trade':\n                    this.tradingPriveleges.rockTrade = true\n                    break\n                case 'Wheat trade':\n                    this.tradingPriveleges.wheatTrade = true\n                    break;\n                default:\n                    break;\n            }\n        })\n        this.selfSettlement.push(settlement)\n    }\n\n    addResourceInitial(resource){\n        let possibles = ['Wheat','Rock','Sheep','Brick','Wood']\n        let allResources = [...resource].filter(e=>possibles.includes(e))\n        allResources.forEach(e=>this[`${e.toLowerCase()}Amount`]++)\n    }\n\n    buildSettlement(settlement,id){\n        this.settlements[id].push(settlement)\n    }\n\n    selfBuildCity(city){\n        this.settlements[this.playerid] = this.settlements[this.playerid].filter(e=>!comparePositions(e,city))\n        this.cities[this.playerid].push(city)        \n    }\n\n    buildCity(city,id){\n        this.settlements[id] = this.settlements[id].filter(e=>!comparePositions(city,e))\n        this.cities[id].push(city)\n    }\n\n    changeRobberPostion(y,x){\n        this.grid.robberPosition = [y,x]\n    }\n\n    whoHaveCityOnThisHex(y,x){\n\n    }\n\n    get selfCanBuyDevelopmentCard(){\n        return (this.wheatAmount && this.rockAmount && this.sheepAmount)\n    }\n\n    useDevelopmentCard(card){\n        this.myDevCards[card]--\n    }\n\n    findWhoToStealFrom(position){\n        const result = []\n        BigLoop:for(let i = 0;i<this.usernames.length;i++){\n            if(i===this.playerid) continue\n            for(let x = 0;x<this.settlements[i].length;x++){\n                let house = this.settlements[i][x]\n                if(house[0] === position || house[1] === position || house[2] === position){\n                    result.push(i)\n                    continue BigLoop;\n                }\n            }\n        }\n        return result\n    }\n\n    addResource(resource){\n        for(let prop in resource){\n            this[`${prop.toLowerCase()}Amount`]+=resource[prop]\n        }\n    }\n\n    minusResource(resource){\n        for(let prop in resource){\n            this[`${prop.toLowerCase()}Amount`]-=resource[prop]\n        }\n    }\n    \n    changeResourceMonopoly(change,resource,playerindex){\n        for(let index = 0;index<change.length;index++){\n            if(index === playerindex){\n                this.resourcePlayers[index] += change[index]\n                if(playerindex === this.playerid) this.playerid[`${resource.toLowerCase}Amount`] += change[index]\n            }\n            else{\n                this.resourcePlayers[index] -= change[index]\n            }\n        }\n    }\n}\n\nexport default Model","import View from '../View/view'\nimport Model from '../Model/model'\nimport axios from 'axios'\nimport io from 'socket.io-client'\n\n//actions:settlement,city,road,dice,turn,trade\nconst Controller = async (canvas,token)=>{\n    const socket = io.connect('/',{query:{token}})\n\n    const sendMessage = (message,data)=>{\n        console.log(message,data)\n        socket.emit(message,data)\n    }\n\n    const messageReference = ['Trade with Bank','Trade Response','Trade Refuse','Trade Acceptance','Trade Initiation','Waiting for Choose Road location','Road location chosen','Choose Road location','Waiting for Choose Knight location','Waiting for Discard Cards','Discard Cards','Monopoly resource chosen','Use development card','Choose Monopoly resources','Monopoly resource chosen','Cheat Done','Cheat','Build Settlement Initial','Build Road Initial','Build road','Build settlements','Build city','Your development card','Cheat Done','Error','Start turn timer','Cancel turn timer','Game starting','Action Needed','Move Knight','Resource Stolen','New player','Game data','Dice Result','Plenty card chosen','Change in extra condition','Waiting for Choose Settlement Resources','Waiting for Build Settlement Initial','Waiting for Build Road Initial']\n    const usualFunctionReference = messageReference.map(e=>()=>{})\n    const waitingFunctionReference = messageReference.map(e=>[])\n    const errorFunctionReference = messageReference.map(e=>[])\n    const resourceReference = ['wheat','rock','sheep','wood','brick']\n    const translateToApplicableResources = (resources)=>{\n        const result = {}\n        resources.forEach((e,i)=>result[resourceReference[i]] = e)\n        return result\n    }\n\n    const addMessage = (mess,func,addOnce)=>{\n        if(messageReference.indexOf(mess) === -1) return\n        usualFunctionReference[messageReference.indexOf(mess)] = func\n    }\n\n    const awaitResponse = (message)=>{\n        return new Promise((resolve,rejected)=>{\n            waitingFunctionReference[messageReference.indexOf(message)].push(resolve)\n            errorFunctionReference[messageReference.indexOf(message)].push(rejected)\n        })\n    }\n\n    const messageReceived = async (message,data)=>{\n        console.log(message,data)\n        const index = messageReference.indexOf(message)\n        await usualFunctionReference[index](data)\n        waitingFunctionReference[index].forEach(f=>f(data))\n        waitingFunctionReference[index] = []\n        errorFunctionReference[index] = []\n    }\n\n    const updateLeaderBoard = ()=>{\n        model.updateLeaderBoard()\n        view.updateLeaderBoard()\n    }\n\n    messageReference.forEach(m=>socket.on(m,(data)=>messageReceived(m,data)))\n\n    const global = {\n        turnSpecificInfo:{},\n        startRobberDrag:()=>{},\n        phase:0\n    }\n    let view = new View(canvas)\n    let model = new Model()\n\n    let playerCode = ['blue','red','white','orange','black']\n    let announce = (message,code)=>{\n        view.onAnnouncementPerpetual = true\n        view.changeAnnoucementPerpetual(message,playerCode[code])\n    }\n    let quickAnnounce = (message,code=global.turn)=>{\n        view.addToAnnoucementQueue(message,playerCode[code],1000)\n    }\n    let turnOffAnnouncement = ()=>{\n        view.onAnnouncementPerpetual = false\n        view.updateAnnouncement()\n    }\n\n    view.configureColorCode(playerCode,global)\n\n    addMessage('Error',({error})=>{\n        announce(error)\n        console.log(error)\n        errorFunctionReference.forEach((e,i)=>{\n            if(e.length>0){\n                for(let f of e){f(error)}\n            }\n            errorFunctionReference[i] = []\n            waitingFunctionReference[i] = []\n        })\n    })\n\n    addMessage('Game data',({gameData})=>{\n        const data = gameData\n        announce(`Room Code: ${data.roomCode}`)\n        model.loadData(data)\n        view.receiveData(data)\n        view.createLeaderboardObject(model,initiateTrade)\n        view.createTradingObject(model.usernames,model)\n        view.configureStealInterface(model)\n        view.createDevDeckPlayer(model,devCardDelegate)\n        \n        let currentX = view.robberElement.x\n        let currentY = view.robberElement.y\n\n        const moveBack = (func)=>{\n            let duration = 500\n            view.robberElement.addAnimation('x',currentX,duration,func)\n            view.robberElement.addAnimation('y',currentY,duration)\n        }\n        let resolve = ()=>{}\n        let ry = 0\n        let rx = 0\n\n        view.robberElement.makeDraggable(null,()=>{\n            let position;\n            let hex;\n            BigLoop:for(let y = 0;y<view.hexMap.length;y++){\n                for(let x = 0;x<view.hexMap[y].length;x++){\n                    if(y+1 === ry && x+1===rx) continue\n                    if(view.hexMap[y][x].pointInShape(view.robberElement.x,view.robberElement.y)){\n                        position = [y,x]\n                        hex = view.hexMap[y][x]\n                        resolve([y+1,x+1])\n                        break BigLoop\n                    }\n                }\n            }\n            if(!position) moveBack()\n            else{\n                view.robberElement.addAnimation('x',hex.absoluteX,500)\n                view.robberElement.addAnimation('y',hex.absoluteY,500)\n                view.robberElement.draggable = false\n            }\n        })\n        view.robberElement.draggable = false\n        global.startRobberDrag = ()=>{\n            currentX = view.robberElement.x\n            currentY = view.robberElement.y\n            ry = model.grid.robberPosition[0]\n            rx = model.grid.robberPosition[1]\n            view.robberElement.draggable = true\n            return new Promise((r)=>{\n                resolve = r\n            })\n        }\n        view.initiateStartGameMessage(()=>sendMessage('Start game'))\n    },true)\n\n    addMessage('New player',(data)=>{\n        console.log(data)\n        model.newPlayer(data)\n        updateLeaderBoard()\n    },true)\n\n    addMessage('Game starting',async ()=>{\n        sendMessage('Cheat')\n        model.wheatAmount += 5\n        model.rockAmount += 5\n        model.sheepAmount += 5\n        model.brickAmount += 5\n        model.woodAmount += 5\n        model.myDevCards ={\n            Knight:1,\n            Monopoly:1,\n            Road:1,\n            Point:1,\n            Plenty:1\n        }\n        view.updateToModel()\n        announce('The game is starting')\n        await awaitResponse('Waiting for Build Settlement Initial')\n        announce('Please choose where to put your settlement:')\n        const firstSettlementLocation = await view.selectSettlementLocationFrom(model.possibleSettlementsInitial)\n        view.buildSettlement(firstSettlementLocation,playerCode[model.playerid])\n        model.selfBuildSettlement(firstSettlementLocation)\n        sendMessage('Build Settlement Initial',{position:firstSettlementLocation})\n        let {resource} = await awaitResponse('Build Settlement Initial')\n        model.addResourceInitial(resource)\n        await awaitResponse('Waiting for Build Road Initial')\n        announce(\"Please choose where to put your road:\")\n        const firstRoadLocation = await view.selectRoadLocation(model.possibleRoadsInitial(firstSettlementLocation))\n        view.buildRoad(firstRoadLocation[0],firstRoadLocation[1],playerCode[model.playerid])\n        model.selfBuildRoad(firstRoadLocation)\n        sendMessage('Build Road Initial',{roadPosition:firstRoadLocation,settlementPosition:firstSettlementLocation})\n        await awaitResponse('Build Road Initial')\n        await awaitResponse('Waiting for Build Settlement Initial')\n        announce(\"Please choose where to put your settlement:\")\n        const secondSettlementLocation = await view.selectSettlementLocationFrom(model.possibleSettlementsInitial)\n        view.buildSettlement(secondSettlementLocation,playerCode[model.playerid])\n        model.selfBuildSettlement(secondSettlementLocation)\n        sendMessage('Build Settlement Initial',{position:secondSettlementLocation})\n        let result = await awaitResponse('Build Settlement Initial')\n        resource = result.resource\n        model.addResourceInitial(resource)\n        await awaitResponse('Waiting for Build Road Initial')\n        announce('Please choose where to put your road:')\n        const secondRoadLocation = await view.selectRoadLocation(model.possibleRoadsInitial(secondSettlementLocation))\n        view.buildRoad(...secondRoadLocation,playerCode[model.playerid])\n        model.selfBuildRoad(secondRoadLocation)\n        sendMessage('Build Road Initial',{roadPosition:secondRoadLocation,settlementPosition:secondSettlementLocation})\n        await awaitResponse('Build Road Initial')\n        turnOffAnnouncement()\n    },true)\n\n    const changeToPhaseOne = ()=>{\n        global.phase = 1\n        view.currentActions = ['dice','trade']\n        view.actionFunctions = view.currentActions.map(e=>actionFunctions[e])\n        view.updateActionObjects()\n    }\n\n    const changeToPhaseTwo = ()=>{\n        global.phase = 2\n        view.currentActions = ['trade',...model.possibleActions,'turn']\n        view.actionFunctions = view.currentActions.map(e=>actionFunctions[e])\n        view.updateActionObjects()\n    }\n\n    const changeToWaitingPhase = ()=>{\n        global.phase = 3\n        view.currentActions = []\n        view.actionFunctions = []\n        view.updateActionObjects()\n    }\n\n    const actionFunctionFactory = (func)=>async (data)=>{\n        changeToWaitingPhase()\n        try{\n            await func(data)\n            view.changePlayerResourceCount(model)\n            updateLeaderBoard()\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    const phase1ActionFunctionFactory = (func)=>async (data)=>{\n        await actionFunctionFactory(func)(data)\n        changeToPhaseOne()\n    }\n    const phase2ActionFunctionFactory = (func)=>async (data)=>{\n        await actionFunctionFactory(func)(data)\n        changeToPhaseTwo()\n    }\n\n    const handleRobber = async ()=>{\n        await awaitResponse('Waiting for Choose Knight location')\n        announce('Please choose robber location:')\n        const position = await global.startRobberDrag()\n        model.changeRobberPostion(...position)\n        sendMessage('Choose Knight location',position)\n        const robabble = model.findWhoToStealFrom(position)\n        await awaitResponse('Move Knight')\n        if(robabble.length){\n            announce('Who do you want to steal from?')\n            const id = await view.initiateStealFromOther(robabble,robabble.map(e=>playerCode[e]))\n            sendMessage('Choose who to steal from',id)\n            const {resource,robbed} = await awaitResponse('Resource Stolen')\n            model[resource] += 1\n            model.resourcePlayers[robbed]--\n        }\n        turnOffAnnouncement()\n    }\n\n    addMessage('Discard Cards',async ({resource,id})=>{\n        const totalResource = resource.wheat + resource.sheep + resource.rock + resource.brick + resource.wood\n        if(id === model.playerid){\n            model.minusResource(resource)\n        }\n        else{\n            model.resourcePlayers[id] -= totalResource\n        }\n    })\n\n    addMessage('Dice Result',async ({dice,resource})=>{\n        announce(`${model.usernames[global.turn]} rolled ${dice}`,global.turn)\n        await view.rollDiceAnimation(dice)\n        if(dice !== 7){\n            const myResource = resource[model.playerid]\n            myResource.forEach(([resource,amount])=>{\n                model[`${resource.toLowerCase()}Amount`]+=amount\n            })\n            view.changePlayerResourceCount(model)\n            turnOffAnnouncement()\n        }\n        else{\n            const totalResources = model.wheatAmount + model.sheepAmount + model.rockAmount + model.brickAmount + model.woodAmount\n            if(totalResources > 7){\n                announce(\"You have more than 7 cards!\",model.playerid)\n                let resource = await view.initiateSteal(Math.ceil(totalResources/2))\n                resource = translateToApplicableResources(resource)\n                sendMessage('Discard Cards',{resource})\n            }\n            await handleRobber()\n        }\n        turnOffAnnouncement()\n    })\n\n    const actionFunctions = {\n        dice:actionFunctionFactory(async ()=>{\n            sendMessage('Roll Dice')\n            await awaitResponse('Dice Result')\n            changeToPhaseTwo()\n        }),\n        trade:()=>{initiateTrade()},\n        settlement:phase2ActionFunctionFactory(async ()=>{\n            announce(\"Settlement where?\")\n            const location = await view.selectSettlementLocationFrom(model.possibleSettlements)\n            turnOffAnnouncement()\n            sendMessage('Build settlements',{position:location})\n            await awaitResponse('Build settlements')\n            view.buildSettlement(location)\n            model.selfBuildSettlement(location)\n            model.sheepAmount --\n            model.wheatAmount --\n            model.brickAmount --\n            model.woodAmount --\n            view.changePlayerResourceCount(model)\n        }),\n        city:phase2ActionFunctionFactory(async ()=>{\n            announce(\"Click on a settlement to upgrade:\")\n            const location = await view.activateCitySelection()\n            turnOffAnnouncement()\n            sendMessage('Build city',{position:location})\n            await awaitResponse('Build city')\n            view.buildCity(location)\n            model.selfBuildCity(location)\n            model.rockAmount -= 3\n            model.wheatAmount -= 2\n            view.changePlayerResourceCount(model)\n        }),\n        road:phase2ActionFunctionFactory(async ()=>{\n            announce(\"Road where?\")\n            const location = await view.selectRoadLocation(model.possibleRoads)\n            turnOffAnnouncement()\n            sendMessage('Build road',{position:location})\n            await awaitResponse('Build road')\n            console.log(location)\n            view.buildRoad(location[0],location[1])\n            model.selfBuildRoad(location)\n            model.brickAmount --\n            model.woodAmount --\n            view.changePlayerResourceCount(model)\n        }),\n        turn:()=>{\n            sendMessage('Pass Turn')\n            changeToWaitingPhase()\n        }\n    }\n\n    addMessage('Action Needed',({turn})=>{\n        view.changePlayerResourceCount(model)\n        updateLeaderBoard()\n        global.turnSpecificInfo = {}\n        if(turn === model.playerid){\n            changeToPhaseOne()\n        }\n        else{\n            changeToWaitingPhase()\n            announce(`${model.usernames[turn]} is playing his turn.`,playerCode[turn])\n        }\n        global.turn = turn\n        view.updateTurn(turn)\n    })\n    \n    const devCardFunctionFactory = (message,func)=>async ()=>{\n        console.log('playing dev card',message,func)\n        if(global.turnSpecificInfo.playedDevelopmentCard) return\n        global.turnSpecificInfo.playedDevelopmentCard = true\n        const previousPhase = global.phase\n        if(global.phase === 3) return\n        changeToWaitingPhase()\n        try{\n            await func(previousPhase)\n            view.changePlayerResourceCount(model)\n            updateLeaderBoard()\n        }\n        catch(e){\n            console.log(e)\n        }\n        console.log('hello')\n        console.log(previousPhase)\n        if(previousPhase===1) changeToPhaseOne()\n        else changeToPhaseTwo()\n    }\n\n    const phase2DevCardFunctionFactory = (message,func)=>devCardFunctionFactory(message,async (previousPhase)=>{\n        if(previousPhase !== 2) throw Error()\n        sendMessage('Use development card',{card:message})\n        await awaitResponse('Use development card')\n        model.useDevelopmentCard(message)\n        view.updateToModel()\n        await func()\n    })\n\n    const devCardDelegate = {\n        Knight:devCardFunctionFactory('Knight',async ()=>{\n            sendMessage('Use development card',{card:'Knight'})\n            await awaitResponse('Use development card')\n            model.useDevelopmentCard('Knight')\n            view.updateToModel()\n            await handleRobber()\n        }),\n        Point:()=>{},\n        Plenty:phase2DevCardFunctionFactory('Plenty',async()=>{\n            let resource = await view.initiatePlenty()\n            resource = translateToApplicableResources(resource)\n            sendMessage('Choose Plenty resources',resource)\n            console.log('hello')\n            await awaitResponse('Plenty card chosen')\n            console.log('hello1')\n            model.addResource(resource)\n            console.log(resource)\n            view.changePlayerResourceCount(model)\n        }),\n        Monopoly:phase2DevCardFunctionFactory('Monopoly',async()=>{\n            let resource = await view.initiateMonpolyResourceChoosing()\n            sendMessage('Choose Monopoly resources',resource)\n            let {change} = await awaitResponse('Monopoly resource chosen')\n            console.log(change)\n            model.changeResourceMonopoly(change,resource,model.playerid)\n            view.changePlayerResourceCount(model)\n        }),\n        Road:phase2DevCardFunctionFactory('Road',async()=>{\n            await awaitResponse('Waiting for Choose Road location')\n            if(model.selfRoad.length>=13) return\n            const firstPosition = await view.selectRoadLocation(model.possibleRoads)\n            console.log(firstPosition)\n            view.buildRoad(...firstPosition)\n            model.buildRoad(firstPosition,model.playerid)\n            const secondPosition = await view.selectRoadLocation(model.possibleRoads)\n            view.buildRoad(...secondPosition)\n            model.buildRoad(secondPosition,model.playerid)\n            sendMessage('Choose Road location',{positions:[firstPosition,secondPosition]})\n            await awaitResponse('Road location chosen')\n        })\n    }\n\n    let alreadyBuying = false\n\n    view.devDeck.pressedEvent(async ()=>{\n        if(alreadyBuying) return\n        if(!model.selfCanBuyDevelopmentCard) return\n        if(model.playerid === global.turn && !global.turnSpecificInfo.boughtDevelopmentCard){\n            alreadyBuying = true\n            global.turnSpecificInfo.boughtDevelopmentCard = true\n            sendMessage('Buy development card')\n            const {card} = await awaitResponse('Your development card')\n            model.buyDevCard(card)\n            view.animateDevCardToPlayerDeck()\n            view.updateToModel()\n            model.wheatAmount--\n            model.sheepAmount--\n            model.rockAmount--\n            view.changePlayerResourceCount(model)\n            alreadyBuying = false\n        }\n    })\n\n    //Passive info\n    addMessage('Change in extra condition',({armyChange,roadChange})=>{\n        if(armyChange) model.largestArmyPlayer = armyChange\n        if(roadChange) model.longestRoadPlayer = roadChange\n        updateLeaderBoard()\n    })\n    \n    const passiveFunctionFactory = (func)=>async (...args)=>{\n        if(global.turn === model.playerid) return\n        await func(...args)\n        updateLeaderBoard()\n    }\n\n    const attachPassiveFunctionFactory = (message,func)=>addMessage(message,passiveFunctionFactory(func))\n\n    attachPassiveFunctionFactory('Build settlements',({position})=>{\n        model.buildSettlement(position,global.turn)\n        view.buildSettlement(position,playerCode[global.turn])\n        model.resourcePlayers[global.turn]-=4\n        quickAnnounce(`${model.usernames[global.turn]} is building a settlement`)\n    })\n    attachPassiveFunctionFactory('Build city',({position})=>{\n        model.buildCity(position,global.turn)\n        view.buildCity(position,playerCode[global.turn])\n        model.resourcePlayers[global.turn]-=5\n        quickAnnounce(`${model.usernames[global.turn]} is building a city`)\n    })\n    attachPassiveFunctionFactory('Build road',({position})=>{\n        model.buildRoad(position,global.turn)\n        view.buildRoad(...position,playerCode[global.turn])\n        model.resourcePlayers[global.turn]-=2\n        quickAnnounce(`${model.usernames[global.turn]} is building a road`)\n    })\n    attachPassiveFunctionFactory('Use development card',({card})=>{\n        quickAnnounce(`${model.usernames[global.turn]} is playing a ${card} development card`)\n        model.devCardPlayers[global.turn]--\n    })\n    attachPassiveFunctionFactory('Buy development card',()=>{\n        quickAnnounce(`${model.usernames[global.turn]} is buying a development card`)\n        model.devCardPlayers[global.turn]++\n    })\n    attachPassiveFunctionFactory('Move Knight',({position})=>{\n        model.grid.robberPosition = position\n        view.moveRobber(position)\n    })\n    attachPassiveFunctionFactory('Resource Stolen',({resource,robbed})=>{\n        //resource is full wheatAmount/rockAmount\n        if(robbed === model.playerid) model[resource]++\n        else{\n            model.resourcePlayers[robbed]--\n            model.resourcePlayers[global.turn]++\n        }\n    })\n    attachPassiveFunctionFactory('Plenty card chosen',()=>{\n        model.resourcePlayers[global.turn]+=2\n    })\n    attachPassiveFunctionFactory('Build Settlement Initial',({position,resource,turn})=>{\n        model.resourcePlayers[turn]+=resource.length\n        model.buildSettlement(position,turn)\n        view.buildSettlement(position,playerCode[turn])\n        quickAnnounce(`${model.usernames[turn]} built a settlement`,playerCode[turn])\n    })\n    attachPassiveFunctionFactory('Build Road Initial',({roadPosition,turn})=>{\n        model.buildRoad(roadPosition,turn)\n        view.buildRoad(...roadPosition,playerCode[turn])\n        quickAnnounce(`${model.usernames[turn]} built a road`,playerCode[turn])\n    })\n    attachPassiveFunctionFactory('Monopoly resource chosen',({resource,change})=>{\n        model.changeResourceMonopoly(change,resource,global.turn)\n        quickAnnounce(`${model.usernames[global.turn]} steal everyones ${resource.toLowerCase()}!`)\n    })\n    attachPassiveFunctionFactory('Road location chosen',({positions})=>{\n        model.buildRoad(positions[0],global.turn)\n        model.buildRoad(positions[1],global.turn)\n        view.buildRoad(...positions[0],playerCode[global.turn])\n        setTimeout(()=>{\n            view.buildRoad(...positions[1],playerCode[global.turn])\n        },1000)\n    })\n\n    addMessage('End game',({winner})=>{\n        announce(`${model.usernames[winner]} had won the game!`)\n    })\n\n    const myTradingCodes = []\n    const myTradingPartner = []\n\n    const getRidOfCode = (code)=>{\n        let index = myTradingCodes.indexOf(code)\n        myTradingCodes.splice(index,1)\n        myTradingPartner.splice(index,1)\n    }\n    const initiateTrade = async ()=>{\n        try{\n            console.log('ehllo')\n            let [mode,amountGiven,amountDemand,proposeTo] = await view.initiateTrade()\n            console.log(mode,amountGiven,amountDemand,proposeTo)\n            amountGiven = translateToApplicableResources(amountGiven)\n            amountDemand = translateToApplicableResources(amountDemand)\n            if(mode === 'bank'){\n                sendMessage('Trade with Bank',{resource:[amountGiven,amountDemand]})\n                await awaitResponse('Trade with Bank')\n                model.addResource(amountDemand)\n                model.minusResource(amountGiven)\n            }else{\n                sendMessage('Trade Initiation',{resource:[amountGiven,amountDemand],players:proposeTo.map(e=>model.usernames.indexOf(e))})\n                const {codes,players} = await awaitResponse('Trade Initiation')\n                codes.forEach(c=>myTradingCodes.push(c))\n                players.forEach(p=>myTradingPartner.push(p))\n            }\n        } catch(e){\n\n        }\n    }\n    const translateToArray = ({wheat,rock,sheep,wood,brick})=>[wheat,rock,sheep,wood,brick]\n\n    const handleTrade = async (user,resourceDemand,resourceGiven,code)=>{\n        try{\n            let [receiveMode,mode,given,demand] = await view.receiveTrade(user,translateToArray(resourceDemand),translateToArray(resourceGiven))\n            if(receiveMode === 'Accept'){\n                sendMessage('Trade Acceptance',{code,resources:[resourceGiven,resourceDemand]})\n                const changeToPartner = -translateToArray(resourceDemand).reduce((t,e)=>t+e,0) + translateToArray(resourceGiven).reduce((t,e)=>t+e,0)\n                model.resourcePlayers[myTradingPartner.indexOf(code)]+=changeToPartner\n                model.minusResource(resourceDemand)\n                model.addResource(resourceGiven)\n                await awaitResponse('Trade Acceptance')\n                getRidOfCode(code)\n            }\n            else{\n                sendMessage(\"Trade Response\",{resources:[given,demand],code})\n                await awaitResponse('Trade Response')\n            }\n        }catch(e){\n            console.log(e)\n            //Refuse Trade\n            sendMessage('Trade Refuse')\n            getRidOfCode(code)\n            await awaitResponse(\"Trade Refuse\")\n        }\n        view.changePlayerResourceCount()\n    }\n\n    addMessage('Trade Response',async ({code,resources})=>{\n        if(!myTradingCodes.includes(code)) return\n        let [resourceDemand,resourceGiven] = resources\n        let user = model.usernames[myTradingPartner.indexOf(code)]\n        handleTrade(user,resourceDemand,resourceGiven,code)\n    })\n    attachPassiveFunctionFactory('Trade Initiation',({players,codes,resources})=>{\n        if(!players.includes(model.playerid)) return\n        myTradingCodes.push(codes[players.indexOf(model.playerid)])\n        myTradingPartner.push(global.turn)\n        handleTrade(global.turn,resources[0],resources[1],codes[players.indexOf(model.playerid)])\n    })\n    addMessage('Trade Refuse',({code})=>{\n        if(myTradingCodes.includes(code)) getRidOfCode(code)\n    })\n    addMessage('Trade Acceptance',({code,resources,players})=>{\n        if(!myTradingCodes.includes(code)){\n            const [giver,getter] = players\n            const [resourceDemand,resourceGiven] = resources\n            const changeToPartner = -translateToArray(resourceDemand).reduce((t,e)=>t+e,0) + translateToArray(resourceGiven).reduce((t,e)=>t+e,0)\n            model.resourcePlayers[giver] -= changeToPartner\n            model.resourcePlayers[getter] += changeToPartner\n        }\n        else{\n            const otherPlayer = myTradingPartner[myTradingCodes.indexOf(code)]\n            getRidOfCode(code)\n            const [resourceDemand,resourceGiven] = resources\n            const changeToPartner = -translateToArray(resourceDemand).reduce((t,e)=>t+e,0) + translateToArray(resourceGiven).reduce((t,e)=>t+e,0)\n            model.resourcePlayers[otherPlayer]+=changeToPartner\n            model.minusResource(resourceDemand)\n            model.addResource(resourceGiven)\n            view.changePlayerResourceCount()\n        }\n    })\n    attachPassiveFunctionFactory('Trade with Bank',({resource})=>{\n        let [give,take] = resource\n        let change = -translateToArray(give).reduce((t,e)=>t+e,0) + translateToArray(take).reduce((t,e)=>t+e,0)\n        model.resourcePlayers[global.turn] += change\n    })\n}\n\nexport default Controller","import React, { useRef, useEffect, useState } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport {Formik} from 'formik'\nimport {object,string} from 'yup'\nimport axios from 'axios'\nimport cogoToast from 'cogo-toast'\nimport {BrowserRouter as Router,Link,Route,Switch} from 'react-router-dom'\nimport Controller from './Controller/controller'\n\nconst baseURL = (process.env.NODE_ENV === 'production')?'/':'http://localhost:4000'\nconst base = axios.create({baseURL})\nconst get = (url)=>base({method:'GET',url})\nconst post = (url,data)=>base({method:'POST',url,data})\n\nfunction App() {\n  let canvasRef = useRef()\n  const [logIn,setLogIn] = useState(false)\n  const token = useRef()\n\n  const validationSchema = object().shape({\n    username:string(),\n    roomCode:string()\n  })\n  const processLogin = (t)=>{\n    token.current = t\n    setLogIn(true)\n  }\n\n  const submitData = async ({username,roomCode})=>{\n    const {error,message,token} = (await post('/register',{username,roomCode})).data\n    if(error) return cogoToast.error(message||\"An error occur\")\n    else processLogin(token)\n  }\n\n  const createRoom = async ({username})=>{\n    const {error,message,token} = (await post('/create',{username})).data\n    if(error) return cogoToast.error(message || 'An error occur')\n    else processLogin(token)\n  }\n\n  useEffect(()=>{\n    if(token.current){\n      Controller(canvasRef.current,token.current)\n    }\n  },[logIn])\n\n  if(!logIn){\n    return (\n      <Router>\n        <Switch>\n          <Route path='/create'>\n            <div className='container-fluid text-center'>\n              <h1>Catan Online</h1>\n              <p>Please enter your username</p>\n              <Formik initialValues={{username:''}} onSubmit={createRoom}>\n                {({handleChange,handleBlur,handleSubmit})=>(\n                  <form className='form-group w-75 mx-auto' onSubmit={handleSubmit}>\n                    <label className='font-weight-bold'>Username</label>\n                    <input type='text' name='username' className='form-control' onChange={handleChange} onBlur={handleBlur}/>\n                    <button className='mt-2 btn btn-success' type='submit'>Create a Room</button>\n                  </form>\n                )\n                }\n              </Formik>\n              <Link to='/'>Join a room</Link>\n            </div>\n          </Route>\n          <Route path='/' exact>\n            <div className='container-fluid text-center'>\n              <h1>Catan Online</h1>\n              <p>Please enter your room code and username</p>\n              <Formik initialValues={{roomCode:'',username:''}} onSubmit={submitData} validationSchema={validationSchema}>\n                {({handleChange,handleBlur,handleSubmit})=>(\n                  <form className='form-group w-75 mx-auto' onSubmit={handleSubmit}>\n                    <label className='font-weight-bold'>Username</label>\n                    <input type='username' name='username' className='form-control' onChange={handleChange} onBlur={handleBlur}/>\n                    <label className='font-weight-bold'>Room Code</label>\n                    <input type='text' name='roomCode' className='form-control' onChange={handleChange} onBlur={handleBlur}/>\n                    <button className='mt-2 btn btn-success' type='submit'>Submit</button>\n                  </form>\n                )\n                }\n              </Formik>\n              <Link to='/create'>Create a room</Link>\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n  else{\n    return (\n      <>\n        <div className=\"d-flex align-items-center w-100 h-100 position-absolute\">\n          <canvas ref={canvasRef} style={{width:'850px',height:'650px'}} className='align-self-center mx-auto'></canvas>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}